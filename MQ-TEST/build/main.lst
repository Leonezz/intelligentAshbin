ARM GAS  C:\Users\zhuWenQ\AppData\Local\Temp\ccxlFh73.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_GPIO_Init,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	MX_GPIO_Init:
  26              	.LFB134:
  27              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.</center></h2>
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/main.c ****   * the "License"; You may not use this file except in compliance with the
  14:Core/Src/main.c ****   * License. You may obtain a copy of the License at:
  15:Core/Src/main.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/main.c ****   *
  17:Core/Src/main.c ****   ******************************************************************************
  18:Core/Src/main.c ****   */
  19:Core/Src/main.c **** /* USER CODE END Header */
  20:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/main.c **** #include "main.h"
  22:Core/Src/main.c **** 
  23:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/main.c **** #include "log.h"
  26:Core/Src/main.c **** /* USER CODE END Includes */
  27:Core/Src/main.c **** 
  28:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  29:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  30:Core/Src/main.c **** 
  31:Core/Src/main.c **** /* USER CODE END PTD */
ARM GAS  C:\Users\zhuWenQ\AppData\Local\Temp\ccxlFh73.s 			page 2


  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  34:Core/Src/main.c **** /* USER CODE BEGIN PD */
  35:Core/Src/main.c **** /* USER CODE END PD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PM */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* USER CODE END PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/main.c **** ADC_HandleTypeDef hadc1;
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* USER CODE BEGIN PV */
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* USER CODE END PV */
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  50:Core/Src/main.c **** void SystemClock_Config(void);
  51:Core/Src/main.c **** static void MX_GPIO_Init(void);
  52:Core/Src/main.c **** static void MX_ADC1_Init(void);
  53:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  54:Core/Src/main.c **** uint32_t ADC_Get_Average(uint8_t ch,uint8_t times)
  55:Core/Src/main.c **** {
  56:Core/Src/main.c **** 	ADC_ChannelConfTypeDef sConfig;		//通道初始化
  57:Core/Src/main.c **** 	uint32_t value_sum=0;	
  58:Core/Src/main.c **** 	uint8_t i;
  59:Core/Src/main.c **** 	switch(ch)							//选择ADC通道
  60:Core/Src/main.c **** 	{
  61:Core/Src/main.c **** 		case 1:sConfig.Channel = ADC_CHANNEL_1;break;	
  62:Core/Src/main.c **** 		case 2:sConfig.Channel = ADC_CHANNEL_2;break;
  63:Core/Src/main.c **** 		case 3:sConfig.Channel = ADC_CHANNEL_3;break;
  64:Core/Src/main.c **** 		case 4:sConfig.Channel = ADC_CHANNEL_4;break;
  65:Core/Src/main.c **** 		case 5:sConfig.Channel = ADC_CHANNEL_5;break;
  66:Core/Src/main.c **** 		case 6:sConfig.Channel = ADC_CHANNEL_6;break;
  67:Core/Src/main.c **** 	}
  68:Core/Src/main.c **** 	sConfig.SamplingTime = ADC_SAMPLETIME_112CYCLES;		//采用周期239.5周期
  69:Core/Src/main.c **** 	sConfig.Rank = 1;
  70:Core/Src/main.c **** 	HAL_ADC_ConfigChannel(&hadc1,&sConfig);											
  71:Core/Src/main.c **** 	for(i=0;i<times;i++)
  72:Core/Src/main.c **** 	{
  73:Core/Src/main.c **** 		HAL_ADC_Start(&hadc1);								//启动转换
  74:Core/Src/main.c **** 		HAL_ADC_PollForConversion(&hadc1,30);				//等待转化结束
  75:Core/Src/main.c **** 		value_sum += HAL_ADC_GetValue(&hadc1);				//求和					
  76:Core/Src/main.c **** 		HAL_ADC_Stop(&hadc1);								//停止转换
  77:Core/Src/main.c **** 	}
  78:Core/Src/main.c **** 	return value_sum/times;									//返回平均值
  79:Core/Src/main.c **** }
  80:Core/Src/main.c **** /* USER CODE END PFP */
  81:Core/Src/main.c **** 
  82:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  83:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  84:Core/Src/main.c **** uint16_t MQ_Analog_Value = 0;
  85:Core/Src/main.c **** /* USER CODE END 0 */
  86:Core/Src/main.c **** 
  87:Core/Src/main.c **** /**
  88:Core/Src/main.c ****   * @brief  The application entry point.
ARM GAS  C:\Users\zhuWenQ\AppData\Local\Temp\ccxlFh73.s 			page 3


  89:Core/Src/main.c ****   * @retval int
  90:Core/Src/main.c ****   */
  91:Core/Src/main.c **** int main(void)
  92:Core/Src/main.c **** {
  93:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  94:Core/Src/main.c **** 
  95:Core/Src/main.c ****   /* USER CODE END 1 */
  96:Core/Src/main.c **** 
  97:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  98:Core/Src/main.c **** 
  99:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 100:Core/Src/main.c ****   HAL_Init();
 101:Core/Src/main.c **** 
 102:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 103:Core/Src/main.c **** 
 104:Core/Src/main.c ****   /* USER CODE END Init */
 105:Core/Src/main.c **** 
 106:Core/Src/main.c ****   /* Configure the system clock */
 107:Core/Src/main.c ****   SystemClock_Config();
 108:Core/Src/main.c **** 
 109:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 110:Core/Src/main.c **** 
 111:Core/Src/main.c ****   /* USER CODE END SysInit */
 112:Core/Src/main.c **** 
 113:Core/Src/main.c ****   /* Initialize all configured peripherals */
 114:Core/Src/main.c ****   MX_GPIO_Init();
 115:Core/Src/main.c ****   MX_ADC1_Init();
 116:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 117:Core/Src/main.c ****   
 118:Core/Src/main.c ****   /* USER CODE END 2 */
 119:Core/Src/main.c **** 
 120:Core/Src/main.c ****   /* Infinite loop */
 121:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 122:Core/Src/main.c ****   while (1)
 123:Core/Src/main.c ****   {
 124:Core/Src/main.c ****     MQ_Analog_Value = ADC_Get_Average(2,1);
 125:Core/Src/main.c ****     LOGI("%d",MQ_Analog_Value);
 126:Core/Src/main.c ****     /* USER CODE END WHILE */
 127:Core/Src/main.c **** 
 128:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 129:Core/Src/main.c ****   }
 130:Core/Src/main.c ****   /* USER CODE END 3 */
 131:Core/Src/main.c **** }
 132:Core/Src/main.c **** 
 133:Core/Src/main.c **** /**
 134:Core/Src/main.c ****   * @brief System Clock Configuration
 135:Core/Src/main.c ****   * @retval None
 136:Core/Src/main.c ****   */
 137:Core/Src/main.c **** void SystemClock_Config(void)
 138:Core/Src/main.c **** {
 139:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 140:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 141:Core/Src/main.c **** 
 142:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 143:Core/Src/main.c ****   */
 144:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 145:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
ARM GAS  C:\Users\zhuWenQ\AppData\Local\Temp\ccxlFh73.s 			page 4


 146:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 147:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 148:Core/Src/main.c ****   */
 149:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 150:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 151:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 152:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 153:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 154:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
 155:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 168;
 156:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 157:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 158:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 159:Core/Src/main.c ****   {
 160:Core/Src/main.c ****     Error_Handler();
 161:Core/Src/main.c ****   }
 162:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 163:Core/Src/main.c ****   */
 164:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 165:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 166:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 167:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 168:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 169:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 170:Core/Src/main.c **** 
 171:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 172:Core/Src/main.c ****   {
 173:Core/Src/main.c ****     Error_Handler();
 174:Core/Src/main.c ****   }
 175:Core/Src/main.c **** }
 176:Core/Src/main.c **** 
 177:Core/Src/main.c **** /**
 178:Core/Src/main.c ****   * @brief ADC1 Initialization Function
 179:Core/Src/main.c ****   * @param None
 180:Core/Src/main.c ****   * @retval None
 181:Core/Src/main.c ****   */
 182:Core/Src/main.c **** static void MX_ADC1_Init(void)
 183:Core/Src/main.c **** {
 184:Core/Src/main.c **** 
 185:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 0 */
 186:Core/Src/main.c **** 
 187:Core/Src/main.c ****   /* USER CODE END ADC1_Init 0 */
 188:Core/Src/main.c **** 
 189:Core/Src/main.c ****   ADC_ChannelConfTypeDef sConfig = {0};
 190:Core/Src/main.c **** 
 191:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 1 */
 192:Core/Src/main.c **** 
 193:Core/Src/main.c ****   /* USER CODE END ADC1_Init 1 */
 194:Core/Src/main.c ****   /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of con
 195:Core/Src/main.c ****   */
 196:Core/Src/main.c ****   hadc1.Instance = ADC1;
 197:Core/Src/main.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 198:Core/Src/main.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 199:Core/Src/main.c ****   hadc1.Init.ScanConvMode = DISABLE;
 200:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = DISABLE;
 201:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 202:Core/Src/main.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
ARM GAS  C:\Users\zhuWenQ\AppData\Local\Temp\ccxlFh73.s 			page 5


 203:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 204:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 205:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 1;
 206:Core/Src/main.c ****   hadc1.Init.DMAContinuousRequests = DISABLE;
 207:Core/Src/main.c ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 208:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 209:Core/Src/main.c ****   {
 210:Core/Src/main.c ****     Error_Handler();
 211:Core/Src/main.c ****   }
 212:Core/Src/main.c ****   /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and it
 213:Core/Src/main.c ****   */
 214:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_2;
 215:Core/Src/main.c ****   sConfig.Rank = 1;
 216:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 217:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 218:Core/Src/main.c ****   {
 219:Core/Src/main.c ****     Error_Handler();
 220:Core/Src/main.c ****   }
 221:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 2 */
 222:Core/Src/main.c **** 
 223:Core/Src/main.c ****   /* USER CODE END ADC1_Init 2 */
 224:Core/Src/main.c **** 
 225:Core/Src/main.c **** }
 226:Core/Src/main.c **** 
 227:Core/Src/main.c **** /**
 228:Core/Src/main.c ****   * @brief GPIO Initialization Function
 229:Core/Src/main.c ****   * @param None
 230:Core/Src/main.c ****   * @retval None
 231:Core/Src/main.c ****   */
 232:Core/Src/main.c **** static void MX_GPIO_Init(void)
 233:Core/Src/main.c **** {
  28              		.loc 1 233 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 32
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 30B5     		push	{r4, r5, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 12
  35              		.cfi_offset 4, -12
  36              		.cfi_offset 5, -8
  37              		.cfi_offset 14, -4
  38 0002 89B0     		sub	sp, sp, #36
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 48
 234:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  41              		.loc 1 234 3 view .LVU1
  42              		.loc 1 234 20 is_stmt 0 view .LVU2
  43 0004 0024     		movs	r4, #0
  44 0006 0394     		str	r4, [sp, #12]
  45 0008 0494     		str	r4, [sp, #16]
  46 000a 0594     		str	r4, [sp, #20]
  47 000c 0694     		str	r4, [sp, #24]
  48 000e 0794     		str	r4, [sp, #28]
 235:Core/Src/main.c **** 
 236:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 237:Core/Src/main.c ****   __HAL_RCC_GPIOF_CLK_ENABLE();
  49              		.loc 1 237 3 is_stmt 1 view .LVU3
ARM GAS  C:\Users\zhuWenQ\AppData\Local\Temp\ccxlFh73.s 			page 6


  50              	.LBB2:
  51              		.loc 1 237 3 view .LVU4
  52 0010 0094     		str	r4, [sp]
  53              		.loc 1 237 3 view .LVU5
  54 0012 1D4B     		ldr	r3, .L3
  55 0014 1A6B     		ldr	r2, [r3, #48]
  56 0016 42F02002 		orr	r2, r2, #32
  57 001a 1A63     		str	r2, [r3, #48]
  58              		.loc 1 237 3 view .LVU6
  59 001c 1A6B     		ldr	r2, [r3, #48]
  60 001e 02F02002 		and	r2, r2, #32
  61 0022 0092     		str	r2, [sp]
  62              		.loc 1 237 3 view .LVU7
  63 0024 009A     		ldr	r2, [sp]
  64              	.LBE2:
  65              		.loc 1 237 3 view .LVU8
 238:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  66              		.loc 1 238 3 view .LVU9
  67              	.LBB3:
  68              		.loc 1 238 3 view .LVU10
  69 0026 0194     		str	r4, [sp, #4]
  70              		.loc 1 238 3 view .LVU11
  71 0028 1A6B     		ldr	r2, [r3, #48]
  72 002a 42F08002 		orr	r2, r2, #128
  73 002e 1A63     		str	r2, [r3, #48]
  74              		.loc 1 238 3 view .LVU12
  75 0030 1A6B     		ldr	r2, [r3, #48]
  76 0032 02F08002 		and	r2, r2, #128
  77 0036 0192     		str	r2, [sp, #4]
  78              		.loc 1 238 3 view .LVU13
  79 0038 019A     		ldr	r2, [sp, #4]
  80              	.LBE3:
  81              		.loc 1 238 3 view .LVU14
 239:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  82              		.loc 1 239 3 view .LVU15
  83              	.LBB4:
  84              		.loc 1 239 3 view .LVU16
  85 003a 0294     		str	r4, [sp, #8]
  86              		.loc 1 239 3 view .LVU17
  87 003c 1A6B     		ldr	r2, [r3, #48]
  88 003e 42F00102 		orr	r2, r2, #1
  89 0042 1A63     		str	r2, [r3, #48]
  90              		.loc 1 239 3 view .LVU18
  91 0044 1B6B     		ldr	r3, [r3, #48]
  92 0046 03F00103 		and	r3, r3, #1
  93 004a 0293     		str	r3, [sp, #8]
  94              		.loc 1 239 3 view .LVU19
  95 004c 029B     		ldr	r3, [sp, #8]
  96              	.LBE4:
  97              		.loc 1 239 3 view .LVU20
 240:Core/Src/main.c **** 
 241:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 242:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOF, LED_R_Pin|LED_G_Pin|LED_B_Pin, GPIO_PIN_RESET);
  98              		.loc 1 242 3 view .LVU21
  99 004e 0F4D     		ldr	r5, .L3+4
 100 0050 2246     		mov	r2, r4
 101 0052 4FF4E071 		mov	r1, #448
ARM GAS  C:\Users\zhuWenQ\AppData\Local\Temp\ccxlFh73.s 			page 7


 102 0056 2846     		mov	r0, r5
 103 0058 FFF7FEFF 		bl	HAL_GPIO_WritePin
 104              	.LVL0:
 243:Core/Src/main.c **** 
 244:Core/Src/main.c ****   /*Configure GPIO pins : LED_R_Pin LED_G_Pin LED_B_Pin */
 245:Core/Src/main.c ****   GPIO_InitStruct.Pin = LED_R_Pin|LED_G_Pin|LED_B_Pin;
 105              		.loc 1 245 3 view .LVU22
 106              		.loc 1 245 23 is_stmt 0 view .LVU23
 107 005c 4FF4E073 		mov	r3, #448
 108 0060 0393     		str	r3, [sp, #12]
 246:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 109              		.loc 1 246 3 is_stmt 1 view .LVU24
 110              		.loc 1 246 24 is_stmt 0 view .LVU25
 111 0062 0123     		movs	r3, #1
 112 0064 0493     		str	r3, [sp, #16]
 247:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 113              		.loc 1 247 3 is_stmt 1 view .LVU26
 114              		.loc 1 247 24 is_stmt 0 view .LVU27
 115 0066 0594     		str	r4, [sp, #20]
 248:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 116              		.loc 1 248 3 is_stmt 1 view .LVU28
 117              		.loc 1 248 25 is_stmt 0 view .LVU29
 118 0068 0694     		str	r4, [sp, #24]
 249:Core/Src/main.c ****   HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 119              		.loc 1 249 3 is_stmt 1 view .LVU30
 120 006a 03A9     		add	r1, sp, #12
 121 006c 2846     		mov	r0, r5
 122 006e FFF7FEFF 		bl	HAL_GPIO_Init
 123              	.LVL1:
 250:Core/Src/main.c **** 
 251:Core/Src/main.c ****   /*Configure GPIO pin : MQ_TTL_INPUT_Pin */
 252:Core/Src/main.c ****   GPIO_InitStruct.Pin = MQ_TTL_INPUT_Pin;
 124              		.loc 1 252 3 view .LVU31
 125              		.loc 1 252 23 is_stmt 0 view .LVU32
 126 0072 0823     		movs	r3, #8
 127 0074 0393     		str	r3, [sp, #12]
 253:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 128              		.loc 1 253 3 is_stmt 1 view .LVU33
 129              		.loc 1 253 24 is_stmt 0 view .LVU34
 130 0076 0494     		str	r4, [sp, #16]
 254:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 131              		.loc 1 254 3 is_stmt 1 view .LVU35
 132              		.loc 1 254 24 is_stmt 0 view .LVU36
 133 0078 0594     		str	r4, [sp, #20]
 255:Core/Src/main.c ****   HAL_GPIO_Init(MQ_TTL_INPUT_GPIO_Port, &GPIO_InitStruct);
 134              		.loc 1 255 3 is_stmt 1 view .LVU37
 135 007a 03A9     		add	r1, sp, #12
 136 007c 0448     		ldr	r0, .L3+8
 137 007e FFF7FEFF 		bl	HAL_GPIO_Init
 138              	.LVL2:
 256:Core/Src/main.c **** 
 257:Core/Src/main.c **** }
 139              		.loc 1 257 1 is_stmt 0 view .LVU38
 140 0082 09B0     		add	sp, sp, #36
 141              	.LCFI2:
 142              		.cfi_def_cfa_offset 12
 143              		@ sp needed
ARM GAS  C:\Users\zhuWenQ\AppData\Local\Temp\ccxlFh73.s 			page 8


 144 0084 30BD     		pop	{r4, r5, pc}
 145              	.L4:
 146 0086 00BF     		.align	2
 147              	.L3:
 148 0088 00380240 		.word	1073887232
 149 008c 00140240 		.word	1073878016
 150 0090 00000240 		.word	1073872896
 151              		.cfi_endproc
 152              	.LFE134:
 154              		.section	.text.MX_ADC1_Init,"ax",%progbits
 155              		.align	1
 156              		.syntax unified
 157              		.thumb
 158              		.thumb_func
 159              		.fpu fpv4-sp-d16
 161              	MX_ADC1_Init:
 162              	.LFB133:
 183:Core/Src/main.c **** 
 163              		.loc 1 183 1 is_stmt 1 view -0
 164              		.cfi_startproc
 165              		@ args = 0, pretend = 0, frame = 16
 166              		@ frame_needed = 0, uses_anonymous_args = 0
 167 0000 70B5     		push	{r4, r5, r6, lr}
 168              	.LCFI3:
 169              		.cfi_def_cfa_offset 16
 170              		.cfi_offset 4, -16
 171              		.cfi_offset 5, -12
 172              		.cfi_offset 6, -8
 173              		.cfi_offset 14, -4
 174 0002 84B0     		sub	sp, sp, #16
 175              	.LCFI4:
 176              		.cfi_def_cfa_offset 32
 189:Core/Src/main.c **** 
 177              		.loc 1 189 3 view .LVU40
 189:Core/Src/main.c **** 
 178              		.loc 1 189 26 is_stmt 0 view .LVU41
 179 0004 0025     		movs	r5, #0
 180 0006 0095     		str	r5, [sp]
 181 0008 0195     		str	r5, [sp, #4]
 182 000a 0295     		str	r5, [sp, #8]
 183 000c 0395     		str	r5, [sp, #12]
 196:Core/Src/main.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 184              		.loc 1 196 3 is_stmt 1 view .LVU42
 196:Core/Src/main.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 185              		.loc 1 196 18 is_stmt 0 view .LVU43
 186 000e 104C     		ldr	r4, .L7
 187 0010 104B     		ldr	r3, .L7+4
 188 0012 2360     		str	r3, [r4]
 197:Core/Src/main.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 189              		.loc 1 197 3 is_stmt 1 view .LVU44
 197:Core/Src/main.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 190              		.loc 1 197 29 is_stmt 0 view .LVU45
 191 0014 4FF48033 		mov	r3, #65536
 192 0018 6360     		str	r3, [r4, #4]
 198:Core/Src/main.c ****   hadc1.Init.ScanConvMode = DISABLE;
 193              		.loc 1 198 3 is_stmt 1 view .LVU46
 198:Core/Src/main.c ****   hadc1.Init.ScanConvMode = DISABLE;
ARM GAS  C:\Users\zhuWenQ\AppData\Local\Temp\ccxlFh73.s 			page 9


 194              		.loc 1 198 25 is_stmt 0 view .LVU47
 195 001a A560     		str	r5, [r4, #8]
 199:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = DISABLE;
 196              		.loc 1 199 3 is_stmt 1 view .LVU48
 199:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = DISABLE;
 197              		.loc 1 199 27 is_stmt 0 view .LVU49
 198 001c 2561     		str	r5, [r4, #16]
 200:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 199              		.loc 1 200 3 is_stmt 1 view .LVU50
 200:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 200              		.loc 1 200 33 is_stmt 0 view .LVU51
 201 001e 2576     		strb	r5, [r4, #24]
 201:Core/Src/main.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 202              		.loc 1 201 3 is_stmt 1 view .LVU52
 201:Core/Src/main.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 203              		.loc 1 201 36 is_stmt 0 view .LVU53
 204 0020 84F82050 		strb	r5, [r4, #32]
 202:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 205              		.loc 1 202 3 is_stmt 1 view .LVU54
 202:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 206              		.loc 1 202 35 is_stmt 0 view .LVU55
 207 0024 E562     		str	r5, [r4, #44]
 203:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 208              		.loc 1 203 3 is_stmt 1 view .LVU56
 203:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 209              		.loc 1 203 31 is_stmt 0 view .LVU57
 210 0026 0C4B     		ldr	r3, .L7+8
 211 0028 A362     		str	r3, [r4, #40]
 204:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 1;
 212              		.loc 1 204 3 is_stmt 1 view .LVU58
 204:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 1;
 213              		.loc 1 204 24 is_stmt 0 view .LVU59
 214 002a E560     		str	r5, [r4, #12]
 205:Core/Src/main.c ****   hadc1.Init.DMAContinuousRequests = DISABLE;
 215              		.loc 1 205 3 is_stmt 1 view .LVU60
 205:Core/Src/main.c ****   hadc1.Init.DMAContinuousRequests = DISABLE;
 216              		.loc 1 205 30 is_stmt 0 view .LVU61
 217 002c 0126     		movs	r6, #1
 218 002e E661     		str	r6, [r4, #28]
 206:Core/Src/main.c ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 219              		.loc 1 206 3 is_stmt 1 view .LVU62
 206:Core/Src/main.c ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 220              		.loc 1 206 36 is_stmt 0 view .LVU63
 221 0030 84F83050 		strb	r5, [r4, #48]
 207:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 222              		.loc 1 207 3 is_stmt 1 view .LVU64
 207:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 223              		.loc 1 207 27 is_stmt 0 view .LVU65
 224 0034 6661     		str	r6, [r4, #20]
 208:Core/Src/main.c ****   {
 225              		.loc 1 208 3 is_stmt 1 view .LVU66
 208:Core/Src/main.c ****   {
 226              		.loc 1 208 7 is_stmt 0 view .LVU67
 227 0036 2046     		mov	r0, r4
 228 0038 FFF7FEFF 		bl	HAL_ADC_Init
 229              	.LVL3:
 214:Core/Src/main.c ****   sConfig.Rank = 1;
ARM GAS  C:\Users\zhuWenQ\AppData\Local\Temp\ccxlFh73.s 			page 10


 230              		.loc 1 214 3 is_stmt 1 view .LVU68
 214:Core/Src/main.c ****   sConfig.Rank = 1;
 231              		.loc 1 214 19 is_stmt 0 view .LVU69
 232 003c 0223     		movs	r3, #2
 233 003e 0093     		str	r3, [sp]
 215:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 234              		.loc 1 215 3 is_stmt 1 view .LVU70
 215:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 235              		.loc 1 215 16 is_stmt 0 view .LVU71
 236 0040 0196     		str	r6, [sp, #4]
 216:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 237              		.loc 1 216 3 is_stmt 1 view .LVU72
 216:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 238              		.loc 1 216 24 is_stmt 0 view .LVU73
 239 0042 0295     		str	r5, [sp, #8]
 217:Core/Src/main.c ****   {
 240              		.loc 1 217 3 is_stmt 1 view .LVU74
 217:Core/Src/main.c ****   {
 241              		.loc 1 217 7 is_stmt 0 view .LVU75
 242 0044 6946     		mov	r1, sp
 243 0046 2046     		mov	r0, r4
 244 0048 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 245              	.LVL4:
 225:Core/Src/main.c **** 
 246              		.loc 1 225 1 view .LVU76
 247 004c 04B0     		add	sp, sp, #16
 248              	.LCFI5:
 249              		.cfi_def_cfa_offset 16
 250              		@ sp needed
 251 004e 70BD     		pop	{r4, r5, r6, pc}
 252              	.L8:
 253              		.align	2
 254              	.L7:
 255 0050 00000000 		.word	hadc1
 256 0054 00200140 		.word	1073815552
 257 0058 0100000F 		.word	251658241
 258              		.cfi_endproc
 259              	.LFE133:
 261              		.section	.text.ADC_Get_Average,"ax",%progbits
 262              		.align	1
 263              		.global	ADC_Get_Average
 264              		.syntax unified
 265              		.thumb
 266              		.thumb_func
 267              		.fpu fpv4-sp-d16
 269              	ADC_Get_Average:
 270              	.LVL5:
 271              	.LFB130:
  55:Core/Src/main.c **** 	ADC_ChannelConfTypeDef sConfig;		//通道初始化
 272              		.loc 1 55 1 is_stmt 1 view -0
 273              		.cfi_startproc
 274              		@ args = 0, pretend = 0, frame = 16
 275              		@ frame_needed = 0, uses_anonymous_args = 0
  55:Core/Src/main.c **** 	ADC_ChannelConfTypeDef sConfig;		//通道初始化
 276              		.loc 1 55 1 is_stmt 0 view .LVU78
 277 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 278              	.LCFI6:
ARM GAS  C:\Users\zhuWenQ\AppData\Local\Temp\ccxlFh73.s 			page 11


 279              		.cfi_def_cfa_offset 20
 280              		.cfi_offset 4, -20
 281              		.cfi_offset 5, -16
 282              		.cfi_offset 6, -12
 283              		.cfi_offset 7, -8
 284              		.cfi_offset 14, -4
 285 0002 85B0     		sub	sp, sp, #20
 286              	.LCFI7:
 287              		.cfi_def_cfa_offset 40
 288 0004 0F46     		mov	r7, r1
  56:Core/Src/main.c **** 	uint32_t value_sum=0;	
 289              		.loc 1 56 2 is_stmt 1 view .LVU79
  57:Core/Src/main.c **** 	uint8_t i;
 290              		.loc 1 57 2 view .LVU80
 291              	.LVL6:
  58:Core/Src/main.c **** 	switch(ch)							//选择ADC通道
 292              		.loc 1 58 2 view .LVU81
  59:Core/Src/main.c **** 	{
 293              		.loc 1 59 2 view .LVU82
 294 0006 0138     		subs	r0, r0, #1
 295              	.LVL7:
  59:Core/Src/main.c **** 	{
 296              		.loc 1 59 2 is_stmt 0 view .LVU83
 297 0008 0528     		cmp	r0, #5
 298 000a 06D8     		bhi	.L10
 299 000c DFE800F0 		tbb	[pc, r0]
 300              	.L12:
 301 0010 03       		.byte	(.L17-.L12)/2
 302 0011 10       		.byte	(.L16-.L12)/2
 303 0012 13       		.byte	(.L15-.L12)/2
 304 0013 16       		.byte	(.L14-.L12)/2
 305 0014 19       		.byte	(.L13-.L12)/2
 306 0015 1C       		.byte	(.L11-.L12)/2
 307              		.p2align 1
 308              	.L17:
  61:Core/Src/main.c **** 		case 2:sConfig.Channel = ADC_CHANNEL_2;break;
 309              		.loc 1 61 10 is_stmt 1 view .LVU84
  61:Core/Src/main.c **** 		case 2:sConfig.Channel = ADC_CHANNEL_2;break;
 310              		.loc 1 61 26 is_stmt 0 view .LVU85
 311 0016 0123     		movs	r3, #1
 312 0018 0093     		str	r3, [sp]
  61:Core/Src/main.c **** 		case 2:sConfig.Channel = ADC_CHANNEL_2;break;
 313              		.loc 1 61 42 is_stmt 1 view .LVU86
 314              	.L10:
  68:Core/Src/main.c **** 	sConfig.Rank = 1;
 315              		.loc 1 68 2 view .LVU87
  68:Core/Src/main.c **** 	sConfig.Rank = 1;
 316              		.loc 1 68 23 is_stmt 0 view .LVU88
 317 001a 0523     		movs	r3, #5
 318 001c 0293     		str	r3, [sp, #8]
  69:Core/Src/main.c **** 	HAL_ADC_ConfigChannel(&hadc1,&sConfig);											
 319              		.loc 1 69 2 is_stmt 1 view .LVU89
  69:Core/Src/main.c **** 	HAL_ADC_ConfigChannel(&hadc1,&sConfig);											
 320              		.loc 1 69 15 is_stmt 0 view .LVU90
 321 001e 0123     		movs	r3, #1
 322 0020 0193     		str	r3, [sp, #4]
  70:Core/Src/main.c **** 	for(i=0;i<times;i++)
ARM GAS  C:\Users\zhuWenQ\AppData\Local\Temp\ccxlFh73.s 			page 12


 323              		.loc 1 70 2 is_stmt 1 view .LVU91
 324 0022 6946     		mov	r1, sp
 325              	.LVL8:
  70:Core/Src/main.c **** 	for(i=0;i<times;i++)
 326              		.loc 1 70 2 is_stmt 0 view .LVU92
 327 0024 1548     		ldr	r0, .L21
 328 0026 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 329              	.LVL9:
  71:Core/Src/main.c **** 	{
 330              		.loc 1 71 2 is_stmt 1 view .LVU93
  71:Core/Src/main.c **** 	{
 331              		.loc 1 71 7 is_stmt 0 view .LVU94
 332 002a 0024     		movs	r4, #0
  57:Core/Src/main.c **** 	uint8_t i;
 333              		.loc 1 57 11 view .LVU95
 334 002c 2646     		mov	r6, r4
  71:Core/Src/main.c **** 	{
 335              		.loc 1 71 2 view .LVU96
 336 002e 1FE0     		b	.L18
 337              	.LVL10:
 338              	.L16:
  62:Core/Src/main.c **** 		case 3:sConfig.Channel = ADC_CHANNEL_3;break;
 339              		.loc 1 62 10 is_stmt 1 view .LVU97
  62:Core/Src/main.c **** 		case 3:sConfig.Channel = ADC_CHANNEL_3;break;
 340              		.loc 1 62 26 is_stmt 0 view .LVU98
 341 0030 0223     		movs	r3, #2
 342 0032 0093     		str	r3, [sp]
  62:Core/Src/main.c **** 		case 3:sConfig.Channel = ADC_CHANNEL_3;break;
 343              		.loc 1 62 42 is_stmt 1 view .LVU99
  62:Core/Src/main.c **** 		case 3:sConfig.Channel = ADC_CHANNEL_3;break;
 344              		.loc 1 62 3 is_stmt 0 view .LVU100
 345 0034 F1E7     		b	.L10
 346              	.L15:
  63:Core/Src/main.c **** 		case 4:sConfig.Channel = ADC_CHANNEL_4;break;
 347              		.loc 1 63 10 is_stmt 1 view .LVU101
  63:Core/Src/main.c **** 		case 4:sConfig.Channel = ADC_CHANNEL_4;break;
 348              		.loc 1 63 26 is_stmt 0 view .LVU102
 349 0036 0323     		movs	r3, #3
 350 0038 0093     		str	r3, [sp]
  63:Core/Src/main.c **** 		case 4:sConfig.Channel = ADC_CHANNEL_4;break;
 351              		.loc 1 63 42 is_stmt 1 view .LVU103
  63:Core/Src/main.c **** 		case 4:sConfig.Channel = ADC_CHANNEL_4;break;
 352              		.loc 1 63 3 is_stmt 0 view .LVU104
 353 003a EEE7     		b	.L10
 354              	.L14:
  64:Core/Src/main.c **** 		case 5:sConfig.Channel = ADC_CHANNEL_5;break;
 355              		.loc 1 64 10 is_stmt 1 view .LVU105
  64:Core/Src/main.c **** 		case 5:sConfig.Channel = ADC_CHANNEL_5;break;
 356              		.loc 1 64 26 is_stmt 0 view .LVU106
 357 003c 0423     		movs	r3, #4
 358 003e 0093     		str	r3, [sp]
  64:Core/Src/main.c **** 		case 5:sConfig.Channel = ADC_CHANNEL_5;break;
 359              		.loc 1 64 42 is_stmt 1 view .LVU107
  64:Core/Src/main.c **** 		case 5:sConfig.Channel = ADC_CHANNEL_5;break;
 360              		.loc 1 64 3 is_stmt 0 view .LVU108
 361 0040 EBE7     		b	.L10
 362              	.L13:
ARM GAS  C:\Users\zhuWenQ\AppData\Local\Temp\ccxlFh73.s 			page 13


  65:Core/Src/main.c **** 		case 6:sConfig.Channel = ADC_CHANNEL_6;break;
 363              		.loc 1 65 10 is_stmt 1 view .LVU109
  65:Core/Src/main.c **** 		case 6:sConfig.Channel = ADC_CHANNEL_6;break;
 364              		.loc 1 65 26 is_stmt 0 view .LVU110
 365 0042 0523     		movs	r3, #5
 366 0044 0093     		str	r3, [sp]
  65:Core/Src/main.c **** 		case 6:sConfig.Channel = ADC_CHANNEL_6;break;
 367              		.loc 1 65 42 is_stmt 1 view .LVU111
  65:Core/Src/main.c **** 		case 6:sConfig.Channel = ADC_CHANNEL_6;break;
 368              		.loc 1 65 3 is_stmt 0 view .LVU112
 369 0046 E8E7     		b	.L10
 370              	.L11:
  66:Core/Src/main.c **** 	}
 371              		.loc 1 66 10 is_stmt 1 view .LVU113
  66:Core/Src/main.c **** 	}
 372              		.loc 1 66 26 is_stmt 0 view .LVU114
 373 0048 0623     		movs	r3, #6
 374 004a 0093     		str	r3, [sp]
  66:Core/Src/main.c **** 	}
 375              		.loc 1 66 42 is_stmt 1 view .LVU115
  66:Core/Src/main.c **** 	}
 376              		.loc 1 66 3 is_stmt 0 view .LVU116
 377 004c E5E7     		b	.L10
 378              	.LVL11:
 379              	.L19:
  73:Core/Src/main.c **** 		HAL_ADC_PollForConversion(&hadc1,30);				//等待转化结束
 380              		.loc 1 73 3 is_stmt 1 discriminator 3 view .LVU117
 381 004e 0B4D     		ldr	r5, .L21
 382 0050 2846     		mov	r0, r5
 383 0052 FFF7FEFF 		bl	HAL_ADC_Start
 384              	.LVL12:
  74:Core/Src/main.c **** 		value_sum += HAL_ADC_GetValue(&hadc1);				//求和					
 385              		.loc 1 74 3 discriminator 3 view .LVU118
 386 0056 1E21     		movs	r1, #30
 387 0058 2846     		mov	r0, r5
 388 005a FFF7FEFF 		bl	HAL_ADC_PollForConversion
 389              	.LVL13:
  75:Core/Src/main.c **** 		HAL_ADC_Stop(&hadc1);								//停止转换
 390              		.loc 1 75 3 discriminator 3 view .LVU119
  75:Core/Src/main.c **** 		HAL_ADC_Stop(&hadc1);								//停止转换
 391              		.loc 1 75 16 is_stmt 0 discriminator 3 view .LVU120
 392 005e 2846     		mov	r0, r5
 393 0060 FFF7FEFF 		bl	HAL_ADC_GetValue
 394              	.LVL14:
  75:Core/Src/main.c **** 		HAL_ADC_Stop(&hadc1);								//停止转换
 395              		.loc 1 75 13 discriminator 3 view .LVU121
 396 0064 0644     		add	r6, r6, r0
 397              	.LVL15:
  76:Core/Src/main.c **** 	}
 398              		.loc 1 76 3 is_stmt 1 discriminator 3 view .LVU122
 399 0066 2846     		mov	r0, r5
 400 0068 FFF7FEFF 		bl	HAL_ADC_Stop
 401              	.LVL16:
  71:Core/Src/main.c **** 	{
 402              		.loc 1 71 18 discriminator 3 view .LVU123
  71:Core/Src/main.c **** 	{
 403              		.loc 1 71 19 is_stmt 0 discriminator 3 view .LVU124
ARM GAS  C:\Users\zhuWenQ\AppData\Local\Temp\ccxlFh73.s 			page 14


 404 006c 0134     		adds	r4, r4, #1
 405              	.LVL17:
  71:Core/Src/main.c **** 	{
 406              		.loc 1 71 19 discriminator 3 view .LVU125
 407 006e E4B2     		uxtb	r4, r4
 408              	.LVL18:
 409              	.L18:
  71:Core/Src/main.c **** 	{
 410              		.loc 1 71 10 is_stmt 1 discriminator 1 view .LVU126
  71:Core/Src/main.c **** 	{
 411              		.loc 1 71 2 is_stmt 0 discriminator 1 view .LVU127
 412 0070 BC42     		cmp	r4, r7
 413 0072 ECD3     		bcc	.L19
  78:Core/Src/main.c **** }
 414              		.loc 1 78 2 is_stmt 1 view .LVU128
  79:Core/Src/main.c **** /* USER CODE END PFP */
 415              		.loc 1 79 1 is_stmt 0 view .LVU129
 416 0074 B6FBF7F0 		udiv	r0, r6, r7
 417 0078 05B0     		add	sp, sp, #20
 418              	.LCFI8:
 419              		.cfi_def_cfa_offset 20
 420              		@ sp needed
 421 007a F0BD     		pop	{r4, r5, r6, r7, pc}
 422              	.LVL19:
 423              	.L22:
  79:Core/Src/main.c **** /* USER CODE END PFP */
 424              		.loc 1 79 1 view .LVU130
 425              		.align	2
 426              	.L21:
 427 007c 00000000 		.word	hadc1
 428              		.cfi_endproc
 429              	.LFE130:
 431              		.section	.text.SystemClock_Config,"ax",%progbits
 432              		.align	1
 433              		.global	SystemClock_Config
 434              		.syntax unified
 435              		.thumb
 436              		.thumb_func
 437              		.fpu fpv4-sp-d16
 439              	SystemClock_Config:
 440              	.LFB132:
 138:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 441              		.loc 1 138 1 is_stmt 1 view -0
 442              		.cfi_startproc
 443              		@ args = 0, pretend = 0, frame = 80
 444              		@ frame_needed = 0, uses_anonymous_args = 0
 445 0000 30B5     		push	{r4, r5, lr}
 446              	.LCFI9:
 447              		.cfi_def_cfa_offset 12
 448              		.cfi_offset 4, -12
 449              		.cfi_offset 5, -8
 450              		.cfi_offset 14, -4
 451 0002 95B0     		sub	sp, sp, #84
 452              	.LCFI10:
 453              		.cfi_def_cfa_offset 96
 139:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 454              		.loc 1 139 3 view .LVU132
ARM GAS  C:\Users\zhuWenQ\AppData\Local\Temp\ccxlFh73.s 			page 15


 139:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 455              		.loc 1 139 22 is_stmt 0 view .LVU133
 456 0004 3022     		movs	r2, #48
 457 0006 0021     		movs	r1, #0
 458 0008 08A8     		add	r0, sp, #32
 459 000a FFF7FEFF 		bl	memset
 460              	.LVL20:
 140:Core/Src/main.c **** 
 461              		.loc 1 140 3 is_stmt 1 view .LVU134
 140:Core/Src/main.c **** 
 462              		.loc 1 140 22 is_stmt 0 view .LVU135
 463 000e 0024     		movs	r4, #0
 464 0010 0394     		str	r4, [sp, #12]
 465 0012 0494     		str	r4, [sp, #16]
 466 0014 0594     		str	r4, [sp, #20]
 467 0016 0694     		str	r4, [sp, #24]
 468 0018 0794     		str	r4, [sp, #28]
 144:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 469              		.loc 1 144 3 is_stmt 1 view .LVU136
 470              	.LBB5:
 144:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 471              		.loc 1 144 3 view .LVU137
 472 001a 0194     		str	r4, [sp, #4]
 144:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 473              		.loc 1 144 3 view .LVU138
 474 001c 1B4B     		ldr	r3, .L25
 475 001e 1A6C     		ldr	r2, [r3, #64]
 476 0020 42F08052 		orr	r2, r2, #268435456
 477 0024 1A64     		str	r2, [r3, #64]
 144:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 478              		.loc 1 144 3 view .LVU139
 479 0026 1B6C     		ldr	r3, [r3, #64]
 480 0028 03F08053 		and	r3, r3, #268435456
 481 002c 0193     		str	r3, [sp, #4]
 144:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 482              		.loc 1 144 3 view .LVU140
 483 002e 019B     		ldr	r3, [sp, #4]
 484              	.LBE5:
 144:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 485              		.loc 1 144 3 view .LVU141
 145:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 486              		.loc 1 145 3 view .LVU142
 487              	.LBB6:
 145:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 488              		.loc 1 145 3 view .LVU143
 489 0030 0294     		str	r4, [sp, #8]
 145:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 490              		.loc 1 145 3 view .LVU144
 491 0032 174B     		ldr	r3, .L25+4
 492 0034 1A68     		ldr	r2, [r3]
 493 0036 42F48042 		orr	r2, r2, #16384
 494 003a 1A60     		str	r2, [r3]
 145:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 495              		.loc 1 145 3 view .LVU145
 496 003c 1B68     		ldr	r3, [r3]
 497 003e 03F48043 		and	r3, r3, #16384
 498 0042 0293     		str	r3, [sp, #8]
ARM GAS  C:\Users\zhuWenQ\AppData\Local\Temp\ccxlFh73.s 			page 16


 145:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 499              		.loc 1 145 3 view .LVU146
 500 0044 029B     		ldr	r3, [sp, #8]
 501              	.LBE6:
 145:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 502              		.loc 1 145 3 view .LVU147
 149:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 503              		.loc 1 149 3 view .LVU148
 149:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 504              		.loc 1 149 36 is_stmt 0 view .LVU149
 505 0046 0225     		movs	r5, #2
 506 0048 0895     		str	r5, [sp, #32]
 150:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 507              		.loc 1 150 3 is_stmt 1 view .LVU150
 150:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 508              		.loc 1 150 30 is_stmt 0 view .LVU151
 509 004a 0123     		movs	r3, #1
 510 004c 0B93     		str	r3, [sp, #44]
 151:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 511              		.loc 1 151 3 is_stmt 1 view .LVU152
 151:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 512              		.loc 1 151 41 is_stmt 0 view .LVU153
 513 004e 1023     		movs	r3, #16
 514 0050 0C93     		str	r3, [sp, #48]
 152:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 515              		.loc 1 152 3 is_stmt 1 view .LVU154
 152:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 516              		.loc 1 152 34 is_stmt 0 view .LVU155
 517 0052 0E95     		str	r5, [sp, #56]
 153:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
 518              		.loc 1 153 3 is_stmt 1 view .LVU156
 153:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
 519              		.loc 1 153 35 is_stmt 0 view .LVU157
 520 0054 0F94     		str	r4, [sp, #60]
 154:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 168;
 521              		.loc 1 154 3 is_stmt 1 view .LVU158
 154:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 168;
 522              		.loc 1 154 30 is_stmt 0 view .LVU159
 523 0056 0823     		movs	r3, #8
 524 0058 1093     		str	r3, [sp, #64]
 155:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 525              		.loc 1 155 3 is_stmt 1 view .LVU160
 155:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 526              		.loc 1 155 30 is_stmt 0 view .LVU161
 527 005a A823     		movs	r3, #168
 528 005c 1193     		str	r3, [sp, #68]
 156:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 529              		.loc 1 156 3 is_stmt 1 view .LVU162
 156:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 530              		.loc 1 156 30 is_stmt 0 view .LVU163
 531 005e 1295     		str	r5, [sp, #72]
 157:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 532              		.loc 1 157 3 is_stmt 1 view .LVU164
 157:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 533              		.loc 1 157 30 is_stmt 0 view .LVU165
 534 0060 0423     		movs	r3, #4
 535 0062 1393     		str	r3, [sp, #76]
ARM GAS  C:\Users\zhuWenQ\AppData\Local\Temp\ccxlFh73.s 			page 17


 158:Core/Src/main.c ****   {
 536              		.loc 1 158 3 is_stmt 1 view .LVU166
 158:Core/Src/main.c ****   {
 537              		.loc 1 158 7 is_stmt 0 view .LVU167
 538 0064 08A8     		add	r0, sp, #32
 539 0066 FFF7FEFF 		bl	HAL_RCC_OscConfig
 540              	.LVL21:
 164:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 541              		.loc 1 164 3 is_stmt 1 view .LVU168
 164:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 542              		.loc 1 164 31 is_stmt 0 view .LVU169
 543 006a 0F23     		movs	r3, #15
 544 006c 0393     		str	r3, [sp, #12]
 166:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 545              		.loc 1 166 3 is_stmt 1 view .LVU170
 166:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 546              		.loc 1 166 34 is_stmt 0 view .LVU171
 547 006e 0495     		str	r5, [sp, #16]
 167:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 548              		.loc 1 167 3 is_stmt 1 view .LVU172
 167:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 549              		.loc 1 167 35 is_stmt 0 view .LVU173
 550 0070 0594     		str	r4, [sp, #20]
 168:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 551              		.loc 1 168 3 is_stmt 1 view .LVU174
 168:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 552              		.loc 1 168 36 is_stmt 0 view .LVU175
 553 0072 4FF4A053 		mov	r3, #5120
 554 0076 0693     		str	r3, [sp, #24]
 169:Core/Src/main.c **** 
 555              		.loc 1 169 3 is_stmt 1 view .LVU176
 169:Core/Src/main.c **** 
 556              		.loc 1 169 36 is_stmt 0 view .LVU177
 557 0078 4FF48053 		mov	r3, #4096
 558 007c 0793     		str	r3, [sp, #28]
 171:Core/Src/main.c ****   {
 559              		.loc 1 171 3 is_stmt 1 view .LVU178
 171:Core/Src/main.c ****   {
 560              		.loc 1 171 7 is_stmt 0 view .LVU179
 561 007e 0521     		movs	r1, #5
 562 0080 03A8     		add	r0, sp, #12
 563 0082 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 564              	.LVL22:
 175:Core/Src/main.c **** 
 565              		.loc 1 175 1 view .LVU180
 566 0086 15B0     		add	sp, sp, #84
 567              	.LCFI11:
 568              		.cfi_def_cfa_offset 12
 569              		@ sp needed
 570 0088 30BD     		pop	{r4, r5, pc}
 571              	.L26:
 572 008a 00BF     		.align	2
 573              	.L25:
 574 008c 00380240 		.word	1073887232
 575 0090 00700040 		.word	1073770496
 576              		.cfi_endproc
 577              	.LFE132:
ARM GAS  C:\Users\zhuWenQ\AppData\Local\Temp\ccxlFh73.s 			page 18


 579              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 580              		.align	2
 581              	.LC0:
 582 0000 493A2000 		.ascii	"I: \000"
 583              		.align	2
 584              	.LC1:
 585 0004 1B5B313B 		.ascii	"\033[1;32m\000"
 585      33326D00 
 586              		.align	2
 587              	.LC2:
 588 000c 20202573 		.ascii	"  %s%s%d\015\012%s\000"
 588      25732564 
 588      0D0A2573 
 588      00
 589 0019 000000   		.align	2
 590              	.LC3:
 591 001c 1B5B306D 		.ascii	"\033[0m\000"
 591      00
 592              		.section	.text.main,"ax",%progbits
 593              		.align	1
 594              		.global	main
 595              		.syntax unified
 596              		.thumb
 597              		.thumb_func
 598              		.fpu fpv4-sp-d16
 600              	main:
 601              	.LFB131:
  92:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 602              		.loc 1 92 1 is_stmt 1 view -0
 603              		.cfi_startproc
 604              		@ Volatile: function does not return.
 605              		@ args = 0, pretend = 0, frame = 0
 606              		@ frame_needed = 0, uses_anonymous_args = 0
 607 0000 00B5     		push	{lr}
 608              	.LCFI12:
 609              		.cfi_def_cfa_offset 4
 610              		.cfi_offset 14, -4
 611 0002 83B0     		sub	sp, sp, #12
 612              	.LCFI13:
 613              		.cfi_def_cfa_offset 16
 100:Core/Src/main.c **** 
 614              		.loc 1 100 3 view .LVU182
 615 0004 FFF7FEFF 		bl	HAL_Init
 616              	.LVL23:
 107:Core/Src/main.c **** 
 617              		.loc 1 107 3 view .LVU183
 618 0008 FFF7FEFF 		bl	SystemClock_Config
 619              	.LVL24:
 114:Core/Src/main.c ****   MX_ADC1_Init();
 620              		.loc 1 114 3 view .LVU184
 621 000c FFF7FEFF 		bl	MX_GPIO_Init
 622              	.LVL25:
 115:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 623              		.loc 1 115 3 view .LVU185
 624 0010 FFF7FEFF 		bl	MX_ADC1_Init
 625              	.LVL26:
 626              	.L28:
ARM GAS  C:\Users\zhuWenQ\AppData\Local\Temp\ccxlFh73.s 			page 19


 122:Core/Src/main.c ****   {
 627              		.loc 1 122 3 discriminator 1 view .LVU186
 124:Core/Src/main.c ****     LOGI("%d",MQ_Analog_Value);
 628              		.loc 1 124 5 discriminator 1 view .LVU187
 124:Core/Src/main.c ****     LOGI("%d",MQ_Analog_Value);
 629              		.loc 1 124 23 is_stmt 0 discriminator 1 view .LVU188
 630 0014 0121     		movs	r1, #1
 631 0016 0220     		movs	r0, #2
 632 0018 FFF7FEFF 		bl	ADC_Get_Average
 633              	.LVL27:
 124:Core/Src/main.c ****     LOGI("%d",MQ_Analog_Value);
 634              		.loc 1 124 21 discriminator 1 view .LVU189
 635 001c 80B2     		uxth	r0, r0
 636 001e 064B     		ldr	r3, .L30
 637 0020 1880     		strh	r0, [r3]	@ movhi
 125:Core/Src/main.c ****     /* USER CODE END WHILE */
 638              		.loc 1 125 5 is_stmt 1 discriminator 1 view .LVU190
 639 0022 064B     		ldr	r3, .L30+4
 640 0024 0193     		str	r3, [sp, #4]
 641 0026 0090     		str	r0, [sp]
 642 0028 054B     		ldr	r3, .L30+8
 643 002a 064A     		ldr	r2, .L30+12
 644 002c 0649     		ldr	r1, .L30+16
 645 002e 0020     		movs	r0, #0
 646 0030 FFF7FEFF 		bl	SEGGER_RTT_printf
 647              	.LVL28:
 122:Core/Src/main.c ****   {
 648              		.loc 1 122 9 discriminator 1 view .LVU191
 649 0034 EEE7     		b	.L28
 650              	.L31:
 651 0036 00BF     		.align	2
 652              	.L30:
 653 0038 00000000 		.word	.LANCHOR0
 654 003c 1C000000 		.word	.LC3
 655 0040 00000000 		.word	.LC0
 656 0044 04000000 		.word	.LC1
 657 0048 0C000000 		.word	.LC2
 658              		.cfi_endproc
 659              	.LFE131:
 661              		.section	.text.Error_Handler,"ax",%progbits
 662              		.align	1
 663              		.global	Error_Handler
 664              		.syntax unified
 665              		.thumb
 666              		.thumb_func
 667              		.fpu fpv4-sp-d16
 669              	Error_Handler:
 670              	.LFB135:
 258:Core/Src/main.c **** 
 259:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 260:Core/Src/main.c **** 
 261:Core/Src/main.c **** /* USER CODE END 4 */
 262:Core/Src/main.c **** 
 263:Core/Src/main.c **** /**
 264:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 265:Core/Src/main.c ****   * @retval None
 266:Core/Src/main.c ****   */
ARM GAS  C:\Users\zhuWenQ\AppData\Local\Temp\ccxlFh73.s 			page 20


 267:Core/Src/main.c **** void Error_Handler(void)
 268:Core/Src/main.c **** {
 671              		.loc 1 268 1 view -0
 672              		.cfi_startproc
 673              		@ args = 0, pretend = 0, frame = 0
 674              		@ frame_needed = 0, uses_anonymous_args = 0
 675              		@ link register save eliminated.
 269:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 270:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 271:Core/Src/main.c **** 
 272:Core/Src/main.c ****   /* USER CODE END Error_Handler_Debug */
 273:Core/Src/main.c **** }
 676              		.loc 1 273 1 view .LVU193
 677 0000 7047     		bx	lr
 678              		.cfi_endproc
 679              	.LFE135:
 681              		.global	MQ_Analog_Value
 682              		.comm	hadc1,72,4
 683              		.section	.bss.MQ_Analog_Value,"aw",%nobits
 684              		.align	1
 685              		.set	.LANCHOR0,. + 0
 688              	MQ_Analog_Value:
 689 0000 0000     		.space	2
 690              		.text
 691              	.Letext0:
 692              		.file 2 "e:\\9 2020-q2-update\\arm-none-eabi\\include\\machine\\_default_types.h"
 693              		.file 3 "e:\\9 2020-q2-update\\arm-none-eabi\\include\\sys\\_stdint.h"
 694              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 695              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 696              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 697              		.file 7 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 698              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 699              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 700              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 701              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 702              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 703              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc.h"
 704              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 705              		.file 15 "e:\\9 2020-q2-update\\lib\\gcc\\arm-none-eabi\\9.3.1\\include\\stddef.h"
 706              		.file 16 "e:\\9 2020-q2-update\\arm-none-eabi\\include\\sys\\_types.h"
 707              		.file 17 "e:\\9 2020-q2-update\\arm-none-eabi\\include\\sys\\reent.h"
 708              		.file 18 "e:\\9 2020-q2-update\\arm-none-eabi\\include\\sys\\lock.h"
 709              		.file 19 "e:\\9 2020-q2-update\\arm-none-eabi\\include\\stdlib.h"
 710              		.file 20 "RTT/SEGGER_RTT.h"
 711              		.file 21 "<built-in>"
ARM GAS  C:\Users\zhuWenQ\AppData\Local\Temp\ccxlFh73.s 			page 21


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\zhuWenQ\AppData\Local\Temp\ccxlFh73.s:18     .text.MX_GPIO_Init:00000000 $t
C:\Users\zhuWenQ\AppData\Local\Temp\ccxlFh73.s:25     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\zhuWenQ\AppData\Local\Temp\ccxlFh73.s:148    .text.MX_GPIO_Init:00000088 $d
C:\Users\zhuWenQ\AppData\Local\Temp\ccxlFh73.s:155    .text.MX_ADC1_Init:00000000 $t
C:\Users\zhuWenQ\AppData\Local\Temp\ccxlFh73.s:161    .text.MX_ADC1_Init:00000000 MX_ADC1_Init
C:\Users\zhuWenQ\AppData\Local\Temp\ccxlFh73.s:255    .text.MX_ADC1_Init:00000050 $d
                            *COM*:00000048 hadc1
C:\Users\zhuWenQ\AppData\Local\Temp\ccxlFh73.s:262    .text.ADC_Get_Average:00000000 $t
C:\Users\zhuWenQ\AppData\Local\Temp\ccxlFh73.s:269    .text.ADC_Get_Average:00000000 ADC_Get_Average
C:\Users\zhuWenQ\AppData\Local\Temp\ccxlFh73.s:301    .text.ADC_Get_Average:00000010 $d
C:\Users\zhuWenQ\AppData\Local\Temp\ccxlFh73.s:307    .text.ADC_Get_Average:00000016 $t
C:\Users\zhuWenQ\AppData\Local\Temp\ccxlFh73.s:427    .text.ADC_Get_Average:0000007c $d
C:\Users\zhuWenQ\AppData\Local\Temp\ccxlFh73.s:432    .text.SystemClock_Config:00000000 $t
C:\Users\zhuWenQ\AppData\Local\Temp\ccxlFh73.s:439    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\zhuWenQ\AppData\Local\Temp\ccxlFh73.s:574    .text.SystemClock_Config:0000008c $d
C:\Users\zhuWenQ\AppData\Local\Temp\ccxlFh73.s:580    .rodata.main.str1.4:00000000 $d
C:\Users\zhuWenQ\AppData\Local\Temp\ccxlFh73.s:593    .text.main:00000000 $t
C:\Users\zhuWenQ\AppData\Local\Temp\ccxlFh73.s:600    .text.main:00000000 main
C:\Users\zhuWenQ\AppData\Local\Temp\ccxlFh73.s:653    .text.main:00000038 $d
C:\Users\zhuWenQ\AppData\Local\Temp\ccxlFh73.s:662    .text.Error_Handler:00000000 $t
C:\Users\zhuWenQ\AppData\Local\Temp\ccxlFh73.s:669    .text.Error_Handler:00000000 Error_Handler
C:\Users\zhuWenQ\AppData\Local\Temp\ccxlFh73.s:688    .bss.MQ_Analog_Value:00000000 MQ_Analog_Value
C:\Users\zhuWenQ\AppData\Local\Temp\ccxlFh73.s:684    .bss.MQ_Analog_Value:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_ADC_Init
HAL_ADC_ConfigChannel
HAL_ADC_Start
HAL_ADC_PollForConversion
HAL_ADC_GetValue
HAL_ADC_Stop
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
SEGGER_RTT_printf
