ARM GAS  C:\Users\zhuWenQ\AppData\Local\Temp\ccZf6yQW.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_GPIO_Init,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	MX_GPIO_Init:
  26              	.LFB133:
  27              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.</center></h2>
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/main.c ****   * the "License"; You may not use this file except in compliance with the
  14:Core/Src/main.c ****   * License. You may obtain a copy of the License at:
  15:Core/Src/main.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/main.c ****   *
  17:Core/Src/main.c ****   ******************************************************************************
  18:Core/Src/main.c ****   */
  19:Core/Src/main.c **** /* USER CODE END Header */
  20:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/main.c **** #include "main.h"
  22:Core/Src/main.c **** #include "log.h"
  23:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/main.c **** 
  26:Core/Src/main.c **** /* USER CODE END Includes */
  27:Core/Src/main.c **** 
  28:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  29:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  30:Core/Src/main.c **** 
  31:Core/Src/main.c **** /* USER CODE END PTD */
ARM GAS  C:\Users\zhuWenQ\AppData\Local\Temp\ccZf6yQW.s 			page 2


  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  34:Core/Src/main.c **** /* USER CODE BEGIN PD */
  35:Core/Src/main.c **** /* USER CODE END PD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PM */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* USER CODE END PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/main.c **** ADC_HandleTypeDef hadc1;
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* USER CODE BEGIN PV */
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* USER CODE END PV */
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  50:Core/Src/main.c **** void SystemClock_Config(void);
  51:Core/Src/main.c **** static void MX_GPIO_Init(void);
  52:Core/Src/main.c **** static void MX_ADC1_Init(void);
  53:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** /* USER CODE END PFP */
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  58:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  59:Core/Src/main.c **** uint16_t MQ_Analog_Value = 0;
  60:Core/Src/main.c **** /* USER CODE END 0 */
  61:Core/Src/main.c **** 
  62:Core/Src/main.c **** /**
  63:Core/Src/main.c ****   * @brief  The application entry point.
  64:Core/Src/main.c ****   * @retval int
  65:Core/Src/main.c ****   */
  66:Core/Src/main.c **** int main(void)
  67:Core/Src/main.c **** {
  68:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  69:Core/Src/main.c **** 
  70:Core/Src/main.c ****   /* USER CODE END 1 */
  71:Core/Src/main.c **** 
  72:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  73:Core/Src/main.c **** 
  74:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  75:Core/Src/main.c ****   HAL_Init();
  76:Core/Src/main.c **** 
  77:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  78:Core/Src/main.c **** 
  79:Core/Src/main.c ****   /* USER CODE END Init */
  80:Core/Src/main.c **** 
  81:Core/Src/main.c ****   /* Configure the system clock */
  82:Core/Src/main.c ****   SystemClock_Config();
  83:Core/Src/main.c **** 
  84:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  85:Core/Src/main.c **** 
  86:Core/Src/main.c ****   /* USER CODE END SysInit */
  87:Core/Src/main.c **** 
  88:Core/Src/main.c ****   /* Initialize all configured peripherals */
ARM GAS  C:\Users\zhuWenQ\AppData\Local\Temp\ccZf6yQW.s 			page 3


  89:Core/Src/main.c ****   MX_GPIO_Init();
  90:Core/Src/main.c ****   MX_ADC1_Init();
  91:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
  92:Core/Src/main.c **** 
  93:Core/Src/main.c ****   /* USER CODE END 2 */
  94:Core/Src/main.c **** 
  95:Core/Src/main.c ****   /* Infinite loop */
  96:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
  97:Core/Src/main.c ****   while (1)
  98:Core/Src/main.c ****   {
  99:Core/Src/main.c ****     GPIO_PinState LEDRState = GPIO_PIN_SET;
 100:Core/Src/main.c ****     GPIO_PinState LEDGState = GPIO_PIN_SET;
 101:Core/Src/main.c ****     GPIO_PinState LEDBState = GPIO_PIN_RESET;
 102:Core/Src/main.c ****     /* USER CODE END WHILE */
 103:Core/Src/main.c ****     if(HAL_GPIO_ReadPin(MQ_TTL_INPUT_GPIO_Port,MQ_TTL_INPUT_Pin)== GPIO_PIN_RESET)
 104:Core/Src/main.c ****     {
 105:Core/Src/main.c ****       LEDRState = GPIO_PIN_SET;
 106:Core/Src/main.c ****       LEDGState = GPIO_PIN_SET;
 107:Core/Src/main.c ****       LEDBState = GPIO_PIN_RESET;
 108:Core/Src/main.c ****     }
 109:Core/Src/main.c ****     HAL_GPIO_WritePin(LED_B_GPIO_Port,LED_B_Pin,LEDBState);
 110:Core/Src/main.c ****     HAL_GPIO_WritePin(LED_G_GPIO_Port,LED_G_Pin,LEDGState);
 111:Core/Src/main.c ****     HAL_GPIO_WritePin(LED_R_GPIO_Port,LED_R_Pin,LEDRState);
 112:Core/Src/main.c ****     HAL_ADC_Start(&hadc1);
 113:Core/Src/main.c ****     HAL_ADC_PollForConversion(&hadc1,50);
 114:Core/Src/main.c ****     if(HAL_IS_BIT_SET(HAL_ADC_GetState(&hadc1),HAL_ADC_STATE_REG_EOC))
 115:Core/Src/main.c ****     {
 116:Core/Src/main.c ****       MQ_Analog_Value = HAL_ADC_GetValue(&hadc1);
 117:Core/Src/main.c ****       LOGI("%d ppm",MQ_Analog_Value);
 118:Core/Src/main.c ****       if(MQ_Analog_Value*3300/4096>300)
 119:Core/Src/main.c ****       {
 120:Core/Src/main.c ****         LOGW("%d ppm",MQ_Analog_Value);
 121:Core/Src/main.c ****         LEDRState = GPIO_PIN_RESET;
 122:Core/Src/main.c ****         LEDGState = GPIO_PIN_SET;
 123:Core/Src/main.c ****         LEDBState = GPIO_PIN_SET;
 124:Core/Src/main.c ****       }
 125:Core/Src/main.c ****     }
 126:Core/Src/main.c ****     HAL_GPIO_WritePin(LED_B_GPIO_Port,LED_B_Pin,LEDBState);
 127:Core/Src/main.c ****     HAL_GPIO_WritePin(LED_G_GPIO_Port,LED_G_Pin,LEDGState);
 128:Core/Src/main.c ****     HAL_GPIO_WritePin(LED_R_GPIO_Port,LED_R_Pin,LEDRState);
 129:Core/Src/main.c ****     HAL_Delay(200);
 130:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 131:Core/Src/main.c ****   }
 132:Core/Src/main.c ****   /* USER CODE END 3 */
 133:Core/Src/main.c **** }
 134:Core/Src/main.c **** 
 135:Core/Src/main.c **** /**
 136:Core/Src/main.c ****   * @brief System Clock Configuration
 137:Core/Src/main.c ****   * @retval None
 138:Core/Src/main.c ****   */
 139:Core/Src/main.c **** void SystemClock_Config(void)
 140:Core/Src/main.c **** {
 141:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 142:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 143:Core/Src/main.c **** 
 144:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 145:Core/Src/main.c ****   */
ARM GAS  C:\Users\zhuWenQ\AppData\Local\Temp\ccZf6yQW.s 			page 4


 146:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 147:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 148:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 149:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 150:Core/Src/main.c ****   */
 151:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 152:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 153:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 154:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 155:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 156:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
 157:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 168;
 158:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 159:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 160:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 161:Core/Src/main.c ****   {
 162:Core/Src/main.c ****     Error_Handler();
 163:Core/Src/main.c ****   }
 164:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 165:Core/Src/main.c ****   */
 166:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 167:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 168:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 169:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 170:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 171:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 172:Core/Src/main.c **** 
 173:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 174:Core/Src/main.c ****   {
 175:Core/Src/main.c ****     Error_Handler();
 176:Core/Src/main.c ****   }
 177:Core/Src/main.c **** }
 178:Core/Src/main.c **** 
 179:Core/Src/main.c **** /**
 180:Core/Src/main.c ****   * @brief ADC1 Initialization Function
 181:Core/Src/main.c ****   * @param None
 182:Core/Src/main.c ****   * @retval None
 183:Core/Src/main.c ****   */
 184:Core/Src/main.c **** static void MX_ADC1_Init(void)
 185:Core/Src/main.c **** {
 186:Core/Src/main.c **** 
 187:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 0 */
 188:Core/Src/main.c **** 
 189:Core/Src/main.c ****   /* USER CODE END ADC1_Init 0 */
 190:Core/Src/main.c **** 
 191:Core/Src/main.c ****   ADC_ChannelConfTypeDef sConfig = {0};
 192:Core/Src/main.c **** 
 193:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 1 */
 194:Core/Src/main.c **** 
 195:Core/Src/main.c ****   /* USER CODE END ADC1_Init 1 */
 196:Core/Src/main.c ****   /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of con
 197:Core/Src/main.c ****   */
 198:Core/Src/main.c ****   hadc1.Instance = ADC1;
 199:Core/Src/main.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 200:Core/Src/main.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 201:Core/Src/main.c ****   hadc1.Init.ScanConvMode = DISABLE;
 202:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = DISABLE;
ARM GAS  C:\Users\zhuWenQ\AppData\Local\Temp\ccZf6yQW.s 			page 5


 203:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 204:Core/Src/main.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 205:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 206:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 207:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 1;
 208:Core/Src/main.c ****   hadc1.Init.DMAContinuousRequests = DISABLE;
 209:Core/Src/main.c ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 210:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 211:Core/Src/main.c ****   {
 212:Core/Src/main.c ****     Error_Handler();
 213:Core/Src/main.c ****   }
 214:Core/Src/main.c ****   /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and it
 215:Core/Src/main.c ****   */
 216:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_2;
 217:Core/Src/main.c ****   sConfig.Rank = 1;
 218:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 219:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 220:Core/Src/main.c ****   {
 221:Core/Src/main.c ****     Error_Handler();
 222:Core/Src/main.c ****   }
 223:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 2 */
 224:Core/Src/main.c **** 
 225:Core/Src/main.c ****   /* USER CODE END ADC1_Init 2 */
 226:Core/Src/main.c **** 
 227:Core/Src/main.c **** }
 228:Core/Src/main.c **** 
 229:Core/Src/main.c **** /**
 230:Core/Src/main.c ****   * @brief GPIO Initialization Function
 231:Core/Src/main.c ****   * @param None
 232:Core/Src/main.c ****   * @retval None
 233:Core/Src/main.c ****   */
 234:Core/Src/main.c **** static void MX_GPIO_Init(void)
 235:Core/Src/main.c **** {
  28              		.loc 1 235 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 32
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 30B5     		push	{r4, r5, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 12
  35              		.cfi_offset 4, -12
  36              		.cfi_offset 5, -8
  37              		.cfi_offset 14, -4
  38 0002 89B0     		sub	sp, sp, #36
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 48
 236:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  41              		.loc 1 236 3 view .LVU1
  42              		.loc 1 236 20 is_stmt 0 view .LVU2
  43 0004 0024     		movs	r4, #0
  44 0006 0394     		str	r4, [sp, #12]
  45 0008 0494     		str	r4, [sp, #16]
  46 000a 0594     		str	r4, [sp, #20]
  47 000c 0694     		str	r4, [sp, #24]
  48 000e 0794     		str	r4, [sp, #28]
 237:Core/Src/main.c **** 
 238:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
ARM GAS  C:\Users\zhuWenQ\AppData\Local\Temp\ccZf6yQW.s 			page 6


 239:Core/Src/main.c ****   __HAL_RCC_GPIOF_CLK_ENABLE();
  49              		.loc 1 239 3 is_stmt 1 view .LVU3
  50              	.LBB2:
  51              		.loc 1 239 3 view .LVU4
  52 0010 0094     		str	r4, [sp]
  53              		.loc 1 239 3 view .LVU5
  54 0012 1D4B     		ldr	r3, .L3
  55 0014 1A6B     		ldr	r2, [r3, #48]
  56 0016 42F02002 		orr	r2, r2, #32
  57 001a 1A63     		str	r2, [r3, #48]
  58              		.loc 1 239 3 view .LVU6
  59 001c 1A6B     		ldr	r2, [r3, #48]
  60 001e 02F02002 		and	r2, r2, #32
  61 0022 0092     		str	r2, [sp]
  62              		.loc 1 239 3 view .LVU7
  63 0024 009A     		ldr	r2, [sp]
  64              	.LBE2:
  65              		.loc 1 239 3 view .LVU8
 240:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  66              		.loc 1 240 3 view .LVU9
  67              	.LBB3:
  68              		.loc 1 240 3 view .LVU10
  69 0026 0194     		str	r4, [sp, #4]
  70              		.loc 1 240 3 view .LVU11
  71 0028 1A6B     		ldr	r2, [r3, #48]
  72 002a 42F08002 		orr	r2, r2, #128
  73 002e 1A63     		str	r2, [r3, #48]
  74              		.loc 1 240 3 view .LVU12
  75 0030 1A6B     		ldr	r2, [r3, #48]
  76 0032 02F08002 		and	r2, r2, #128
  77 0036 0192     		str	r2, [sp, #4]
  78              		.loc 1 240 3 view .LVU13
  79 0038 019A     		ldr	r2, [sp, #4]
  80              	.LBE3:
  81              		.loc 1 240 3 view .LVU14
 241:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  82              		.loc 1 241 3 view .LVU15
  83              	.LBB4:
  84              		.loc 1 241 3 view .LVU16
  85 003a 0294     		str	r4, [sp, #8]
  86              		.loc 1 241 3 view .LVU17
  87 003c 1A6B     		ldr	r2, [r3, #48]
  88 003e 42F00102 		orr	r2, r2, #1
  89 0042 1A63     		str	r2, [r3, #48]
  90              		.loc 1 241 3 view .LVU18
  91 0044 1B6B     		ldr	r3, [r3, #48]
  92 0046 03F00103 		and	r3, r3, #1
  93 004a 0293     		str	r3, [sp, #8]
  94              		.loc 1 241 3 view .LVU19
  95 004c 029B     		ldr	r3, [sp, #8]
  96              	.LBE4:
  97              		.loc 1 241 3 view .LVU20
 242:Core/Src/main.c **** 
 243:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 244:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOF, LED_R_Pin|LED_G_Pin|LED_B_Pin, GPIO_PIN_RESET);
  98              		.loc 1 244 3 view .LVU21
  99 004e 0F4D     		ldr	r5, .L3+4
ARM GAS  C:\Users\zhuWenQ\AppData\Local\Temp\ccZf6yQW.s 			page 7


 100 0050 2246     		mov	r2, r4
 101 0052 4FF4E071 		mov	r1, #448
 102 0056 2846     		mov	r0, r5
 103 0058 FFF7FEFF 		bl	HAL_GPIO_WritePin
 104              	.LVL0:
 245:Core/Src/main.c **** 
 246:Core/Src/main.c ****   /*Configure GPIO pins : LED_R_Pin LED_G_Pin LED_B_Pin */
 247:Core/Src/main.c ****   GPIO_InitStruct.Pin = LED_R_Pin|LED_G_Pin|LED_B_Pin;
 105              		.loc 1 247 3 view .LVU22
 106              		.loc 1 247 23 is_stmt 0 view .LVU23
 107 005c 4FF4E073 		mov	r3, #448
 108 0060 0393     		str	r3, [sp, #12]
 248:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 109              		.loc 1 248 3 is_stmt 1 view .LVU24
 110              		.loc 1 248 24 is_stmt 0 view .LVU25
 111 0062 0123     		movs	r3, #1
 112 0064 0493     		str	r3, [sp, #16]
 249:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 113              		.loc 1 249 3 is_stmt 1 view .LVU26
 114              		.loc 1 249 24 is_stmt 0 view .LVU27
 115 0066 0594     		str	r4, [sp, #20]
 250:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 116              		.loc 1 250 3 is_stmt 1 view .LVU28
 117              		.loc 1 250 25 is_stmt 0 view .LVU29
 118 0068 0694     		str	r4, [sp, #24]
 251:Core/Src/main.c ****   HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 119              		.loc 1 251 3 is_stmt 1 view .LVU30
 120 006a 03A9     		add	r1, sp, #12
 121 006c 2846     		mov	r0, r5
 122 006e FFF7FEFF 		bl	HAL_GPIO_Init
 123              	.LVL1:
 252:Core/Src/main.c **** 
 253:Core/Src/main.c ****   /*Configure GPIO pin : MQ_TTL_INPUT_Pin */
 254:Core/Src/main.c ****   GPIO_InitStruct.Pin = MQ_TTL_INPUT_Pin;
 124              		.loc 1 254 3 view .LVU31
 125              		.loc 1 254 23 is_stmt 0 view .LVU32
 126 0072 0823     		movs	r3, #8
 127 0074 0393     		str	r3, [sp, #12]
 255:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 128              		.loc 1 255 3 is_stmt 1 view .LVU33
 129              		.loc 1 255 24 is_stmt 0 view .LVU34
 130 0076 0494     		str	r4, [sp, #16]
 256:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 131              		.loc 1 256 3 is_stmt 1 view .LVU35
 132              		.loc 1 256 24 is_stmt 0 view .LVU36
 133 0078 0594     		str	r4, [sp, #20]
 257:Core/Src/main.c ****   HAL_GPIO_Init(MQ_TTL_INPUT_GPIO_Port, &GPIO_InitStruct);
 134              		.loc 1 257 3 is_stmt 1 view .LVU37
 135 007a 03A9     		add	r1, sp, #12
 136 007c 0448     		ldr	r0, .L3+8
 137 007e FFF7FEFF 		bl	HAL_GPIO_Init
 138              	.LVL2:
 258:Core/Src/main.c **** 
 259:Core/Src/main.c **** }
 139              		.loc 1 259 1 is_stmt 0 view .LVU38
 140 0082 09B0     		add	sp, sp, #36
 141              	.LCFI2:
ARM GAS  C:\Users\zhuWenQ\AppData\Local\Temp\ccZf6yQW.s 			page 8


 142              		.cfi_def_cfa_offset 12
 143              		@ sp needed
 144 0084 30BD     		pop	{r4, r5, pc}
 145              	.L4:
 146 0086 00BF     		.align	2
 147              	.L3:
 148 0088 00380240 		.word	1073887232
 149 008c 00140240 		.word	1073878016
 150 0090 00000240 		.word	1073872896
 151              		.cfi_endproc
 152              	.LFE133:
 154              		.section	.text.MX_ADC1_Init,"ax",%progbits
 155              		.align	1
 156              		.syntax unified
 157              		.thumb
 158              		.thumb_func
 159              		.fpu fpv4-sp-d16
 161              	MX_ADC1_Init:
 162              	.LFB132:
 185:Core/Src/main.c **** 
 163              		.loc 1 185 1 is_stmt 1 view -0
 164              		.cfi_startproc
 165              		@ args = 0, pretend = 0, frame = 16
 166              		@ frame_needed = 0, uses_anonymous_args = 0
 167 0000 70B5     		push	{r4, r5, r6, lr}
 168              	.LCFI3:
 169              		.cfi_def_cfa_offset 16
 170              		.cfi_offset 4, -16
 171              		.cfi_offset 5, -12
 172              		.cfi_offset 6, -8
 173              		.cfi_offset 14, -4
 174 0002 84B0     		sub	sp, sp, #16
 175              	.LCFI4:
 176              		.cfi_def_cfa_offset 32
 191:Core/Src/main.c **** 
 177              		.loc 1 191 3 view .LVU40
 191:Core/Src/main.c **** 
 178              		.loc 1 191 26 is_stmt 0 view .LVU41
 179 0004 0025     		movs	r5, #0
 180 0006 0095     		str	r5, [sp]
 181 0008 0195     		str	r5, [sp, #4]
 182 000a 0295     		str	r5, [sp, #8]
 183 000c 0395     		str	r5, [sp, #12]
 198:Core/Src/main.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 184              		.loc 1 198 3 is_stmt 1 view .LVU42
 198:Core/Src/main.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 185              		.loc 1 198 18 is_stmt 0 view .LVU43
 186 000e 104C     		ldr	r4, .L7
 187 0010 104B     		ldr	r3, .L7+4
 188 0012 2360     		str	r3, [r4]
 199:Core/Src/main.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 189              		.loc 1 199 3 is_stmt 1 view .LVU44
 199:Core/Src/main.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 190              		.loc 1 199 29 is_stmt 0 view .LVU45
 191 0014 4FF48033 		mov	r3, #65536
 192 0018 6360     		str	r3, [r4, #4]
 200:Core/Src/main.c ****   hadc1.Init.ScanConvMode = DISABLE;
ARM GAS  C:\Users\zhuWenQ\AppData\Local\Temp\ccZf6yQW.s 			page 9


 193              		.loc 1 200 3 is_stmt 1 view .LVU46
 200:Core/Src/main.c ****   hadc1.Init.ScanConvMode = DISABLE;
 194              		.loc 1 200 25 is_stmt 0 view .LVU47
 195 001a A560     		str	r5, [r4, #8]
 201:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = DISABLE;
 196              		.loc 1 201 3 is_stmt 1 view .LVU48
 201:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = DISABLE;
 197              		.loc 1 201 27 is_stmt 0 view .LVU49
 198 001c 2561     		str	r5, [r4, #16]
 202:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 199              		.loc 1 202 3 is_stmt 1 view .LVU50
 202:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 200              		.loc 1 202 33 is_stmt 0 view .LVU51
 201 001e 2576     		strb	r5, [r4, #24]
 203:Core/Src/main.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 202              		.loc 1 203 3 is_stmt 1 view .LVU52
 203:Core/Src/main.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 203              		.loc 1 203 36 is_stmt 0 view .LVU53
 204 0020 84F82050 		strb	r5, [r4, #32]
 204:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 205              		.loc 1 204 3 is_stmt 1 view .LVU54
 204:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 206              		.loc 1 204 35 is_stmt 0 view .LVU55
 207 0024 E562     		str	r5, [r4, #44]
 205:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 208              		.loc 1 205 3 is_stmt 1 view .LVU56
 205:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 209              		.loc 1 205 31 is_stmt 0 view .LVU57
 210 0026 0C4B     		ldr	r3, .L7+8
 211 0028 A362     		str	r3, [r4, #40]
 206:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 1;
 212              		.loc 1 206 3 is_stmt 1 view .LVU58
 206:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 1;
 213              		.loc 1 206 24 is_stmt 0 view .LVU59
 214 002a E560     		str	r5, [r4, #12]
 207:Core/Src/main.c ****   hadc1.Init.DMAContinuousRequests = DISABLE;
 215              		.loc 1 207 3 is_stmt 1 view .LVU60
 207:Core/Src/main.c ****   hadc1.Init.DMAContinuousRequests = DISABLE;
 216              		.loc 1 207 30 is_stmt 0 view .LVU61
 217 002c 0126     		movs	r6, #1
 218 002e E661     		str	r6, [r4, #28]
 208:Core/Src/main.c ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 219              		.loc 1 208 3 is_stmt 1 view .LVU62
 208:Core/Src/main.c ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 220              		.loc 1 208 36 is_stmt 0 view .LVU63
 221 0030 84F83050 		strb	r5, [r4, #48]
 209:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 222              		.loc 1 209 3 is_stmt 1 view .LVU64
 209:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 223              		.loc 1 209 27 is_stmt 0 view .LVU65
 224 0034 6661     		str	r6, [r4, #20]
 210:Core/Src/main.c ****   {
 225              		.loc 1 210 3 is_stmt 1 view .LVU66
 210:Core/Src/main.c ****   {
 226              		.loc 1 210 7 is_stmt 0 view .LVU67
 227 0036 2046     		mov	r0, r4
 228 0038 FFF7FEFF 		bl	HAL_ADC_Init
ARM GAS  C:\Users\zhuWenQ\AppData\Local\Temp\ccZf6yQW.s 			page 10


 229              	.LVL3:
 216:Core/Src/main.c ****   sConfig.Rank = 1;
 230              		.loc 1 216 3 is_stmt 1 view .LVU68
 216:Core/Src/main.c ****   sConfig.Rank = 1;
 231              		.loc 1 216 19 is_stmt 0 view .LVU69
 232 003c 0223     		movs	r3, #2
 233 003e 0093     		str	r3, [sp]
 217:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 234              		.loc 1 217 3 is_stmt 1 view .LVU70
 217:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 235              		.loc 1 217 16 is_stmt 0 view .LVU71
 236 0040 0196     		str	r6, [sp, #4]
 218:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 237              		.loc 1 218 3 is_stmt 1 view .LVU72
 218:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 238              		.loc 1 218 24 is_stmt 0 view .LVU73
 239 0042 0295     		str	r5, [sp, #8]
 219:Core/Src/main.c ****   {
 240              		.loc 1 219 3 is_stmt 1 view .LVU74
 219:Core/Src/main.c ****   {
 241              		.loc 1 219 7 is_stmt 0 view .LVU75
 242 0044 6946     		mov	r1, sp
 243 0046 2046     		mov	r0, r4
 244 0048 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 245              	.LVL4:
 227:Core/Src/main.c **** 
 246              		.loc 1 227 1 view .LVU76
 247 004c 04B0     		add	sp, sp, #16
 248              	.LCFI5:
 249              		.cfi_def_cfa_offset 16
 250              		@ sp needed
 251 004e 70BD     		pop	{r4, r5, r6, pc}
 252              	.L8:
 253              		.align	2
 254              	.L7:
 255 0050 00000000 		.word	hadc1
 256 0054 00200140 		.word	1073815552
 257 0058 0100000F 		.word	251658241
 258              		.cfi_endproc
 259              	.LFE132:
 261              		.section	.text.SystemClock_Config,"ax",%progbits
 262              		.align	1
 263              		.global	SystemClock_Config
 264              		.syntax unified
 265              		.thumb
 266              		.thumb_func
 267              		.fpu fpv4-sp-d16
 269              	SystemClock_Config:
 270              	.LFB131:
 140:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 271              		.loc 1 140 1 is_stmt 1 view -0
 272              		.cfi_startproc
 273              		@ args = 0, pretend = 0, frame = 80
 274              		@ frame_needed = 0, uses_anonymous_args = 0
 275 0000 30B5     		push	{r4, r5, lr}
 276              	.LCFI6:
 277              		.cfi_def_cfa_offset 12
ARM GAS  C:\Users\zhuWenQ\AppData\Local\Temp\ccZf6yQW.s 			page 11


 278              		.cfi_offset 4, -12
 279              		.cfi_offset 5, -8
 280              		.cfi_offset 14, -4
 281 0002 95B0     		sub	sp, sp, #84
 282              	.LCFI7:
 283              		.cfi_def_cfa_offset 96
 141:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 284              		.loc 1 141 3 view .LVU78
 141:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 285              		.loc 1 141 22 is_stmt 0 view .LVU79
 286 0004 3022     		movs	r2, #48
 287 0006 0021     		movs	r1, #0
 288 0008 08A8     		add	r0, sp, #32
 289 000a FFF7FEFF 		bl	memset
 290              	.LVL5:
 142:Core/Src/main.c **** 
 291              		.loc 1 142 3 is_stmt 1 view .LVU80
 142:Core/Src/main.c **** 
 292              		.loc 1 142 22 is_stmt 0 view .LVU81
 293 000e 0024     		movs	r4, #0
 294 0010 0394     		str	r4, [sp, #12]
 295 0012 0494     		str	r4, [sp, #16]
 296 0014 0594     		str	r4, [sp, #20]
 297 0016 0694     		str	r4, [sp, #24]
 298 0018 0794     		str	r4, [sp, #28]
 146:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 299              		.loc 1 146 3 is_stmt 1 view .LVU82
 300              	.LBB5:
 146:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 301              		.loc 1 146 3 view .LVU83
 302 001a 0194     		str	r4, [sp, #4]
 146:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 303              		.loc 1 146 3 view .LVU84
 304 001c 1B4B     		ldr	r3, .L11
 305 001e 1A6C     		ldr	r2, [r3, #64]
 306 0020 42F08052 		orr	r2, r2, #268435456
 307 0024 1A64     		str	r2, [r3, #64]
 146:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 308              		.loc 1 146 3 view .LVU85
 309 0026 1B6C     		ldr	r3, [r3, #64]
 310 0028 03F08053 		and	r3, r3, #268435456
 311 002c 0193     		str	r3, [sp, #4]
 146:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 312              		.loc 1 146 3 view .LVU86
 313 002e 019B     		ldr	r3, [sp, #4]
 314              	.LBE5:
 146:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 315              		.loc 1 146 3 view .LVU87
 147:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 316              		.loc 1 147 3 view .LVU88
 317              	.LBB6:
 147:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 318              		.loc 1 147 3 view .LVU89
 319 0030 0294     		str	r4, [sp, #8]
 147:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 320              		.loc 1 147 3 view .LVU90
 321 0032 174B     		ldr	r3, .L11+4
ARM GAS  C:\Users\zhuWenQ\AppData\Local\Temp\ccZf6yQW.s 			page 12


 322 0034 1A68     		ldr	r2, [r3]
 323 0036 42F48042 		orr	r2, r2, #16384
 324 003a 1A60     		str	r2, [r3]
 147:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 325              		.loc 1 147 3 view .LVU91
 326 003c 1B68     		ldr	r3, [r3]
 327 003e 03F48043 		and	r3, r3, #16384
 328 0042 0293     		str	r3, [sp, #8]
 147:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 329              		.loc 1 147 3 view .LVU92
 330 0044 029B     		ldr	r3, [sp, #8]
 331              	.LBE6:
 147:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 332              		.loc 1 147 3 view .LVU93
 151:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 333              		.loc 1 151 3 view .LVU94
 151:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 334              		.loc 1 151 36 is_stmt 0 view .LVU95
 335 0046 0225     		movs	r5, #2
 336 0048 0895     		str	r5, [sp, #32]
 152:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 337              		.loc 1 152 3 is_stmt 1 view .LVU96
 152:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 338              		.loc 1 152 30 is_stmt 0 view .LVU97
 339 004a 0123     		movs	r3, #1
 340 004c 0B93     		str	r3, [sp, #44]
 153:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 341              		.loc 1 153 3 is_stmt 1 view .LVU98
 153:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 342              		.loc 1 153 41 is_stmt 0 view .LVU99
 343 004e 1023     		movs	r3, #16
 344 0050 0C93     		str	r3, [sp, #48]
 154:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 345              		.loc 1 154 3 is_stmt 1 view .LVU100
 154:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 346              		.loc 1 154 34 is_stmt 0 view .LVU101
 347 0052 0E95     		str	r5, [sp, #56]
 155:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
 348              		.loc 1 155 3 is_stmt 1 view .LVU102
 155:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
 349              		.loc 1 155 35 is_stmt 0 view .LVU103
 350 0054 0F94     		str	r4, [sp, #60]
 156:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 168;
 351              		.loc 1 156 3 is_stmt 1 view .LVU104
 156:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 168;
 352              		.loc 1 156 30 is_stmt 0 view .LVU105
 353 0056 0823     		movs	r3, #8
 354 0058 1093     		str	r3, [sp, #64]
 157:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 355              		.loc 1 157 3 is_stmt 1 view .LVU106
 157:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 356              		.loc 1 157 30 is_stmt 0 view .LVU107
 357 005a A823     		movs	r3, #168
 358 005c 1193     		str	r3, [sp, #68]
 158:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 359              		.loc 1 158 3 is_stmt 1 view .LVU108
 158:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
ARM GAS  C:\Users\zhuWenQ\AppData\Local\Temp\ccZf6yQW.s 			page 13


 360              		.loc 1 158 30 is_stmt 0 view .LVU109
 361 005e 1295     		str	r5, [sp, #72]
 159:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 362              		.loc 1 159 3 is_stmt 1 view .LVU110
 159:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 363              		.loc 1 159 30 is_stmt 0 view .LVU111
 364 0060 0423     		movs	r3, #4
 365 0062 1393     		str	r3, [sp, #76]
 160:Core/Src/main.c ****   {
 366              		.loc 1 160 3 is_stmt 1 view .LVU112
 160:Core/Src/main.c ****   {
 367              		.loc 1 160 7 is_stmt 0 view .LVU113
 368 0064 08A8     		add	r0, sp, #32
 369 0066 FFF7FEFF 		bl	HAL_RCC_OscConfig
 370              	.LVL6:
 166:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 371              		.loc 1 166 3 is_stmt 1 view .LVU114
 166:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 372              		.loc 1 166 31 is_stmt 0 view .LVU115
 373 006a 0F23     		movs	r3, #15
 374 006c 0393     		str	r3, [sp, #12]
 168:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 375              		.loc 1 168 3 is_stmt 1 view .LVU116
 168:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 376              		.loc 1 168 34 is_stmt 0 view .LVU117
 377 006e 0495     		str	r5, [sp, #16]
 169:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 378              		.loc 1 169 3 is_stmt 1 view .LVU118
 169:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 379              		.loc 1 169 35 is_stmt 0 view .LVU119
 380 0070 0594     		str	r4, [sp, #20]
 170:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 381              		.loc 1 170 3 is_stmt 1 view .LVU120
 170:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 382              		.loc 1 170 36 is_stmt 0 view .LVU121
 383 0072 4FF4A053 		mov	r3, #5120
 384 0076 0693     		str	r3, [sp, #24]
 171:Core/Src/main.c **** 
 385              		.loc 1 171 3 is_stmt 1 view .LVU122
 171:Core/Src/main.c **** 
 386              		.loc 1 171 36 is_stmt 0 view .LVU123
 387 0078 4FF48053 		mov	r3, #4096
 388 007c 0793     		str	r3, [sp, #28]
 173:Core/Src/main.c ****   {
 389              		.loc 1 173 3 is_stmt 1 view .LVU124
 173:Core/Src/main.c ****   {
 390              		.loc 1 173 7 is_stmt 0 view .LVU125
 391 007e 0521     		movs	r1, #5
 392 0080 03A8     		add	r0, sp, #12
 393 0082 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 394              	.LVL7:
 177:Core/Src/main.c **** 
 395              		.loc 1 177 1 view .LVU126
 396 0086 15B0     		add	sp, sp, #84
 397              	.LCFI8:
 398              		.cfi_def_cfa_offset 12
 399              		@ sp needed
ARM GAS  C:\Users\zhuWenQ\AppData\Local\Temp\ccZf6yQW.s 			page 14


 400 0088 30BD     		pop	{r4, r5, pc}
 401              	.L12:
 402 008a 00BF     		.align	2
 403              	.L11:
 404 008c 00380240 		.word	1073887232
 405 0090 00700040 		.word	1073770496
 406              		.cfi_endproc
 407              	.LFE131:
 409              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 410              		.align	2
 411              	.LC0:
 412 0000 493A2000 		.ascii	"I: \000"
 413              		.align	2
 414              	.LC1:
 415 0004 1B5B313B 		.ascii	"\033[1;32m\000"
 415      33326D00 
 416              		.align	2
 417              	.LC2:
 418 000c 20202573 		.ascii	"  %s%s%d ppm\015\012%s\000"
 418      25732564 
 418      2070706D 
 418      0D0A2573 
 418      00
 419 001d 000000   		.align	2
 420              	.LC3:
 421 0020 1B5B306D 		.ascii	"\033[0m\000"
 421      00
 422 0025 000000   		.align	2
 423              	.LC4:
 424 0028 573A2000 		.ascii	"W: \000"
 425              		.align	2
 426              	.LC5:
 427 002c 1B5B313B 		.ascii	"\033[1;33m\000"
 427      33336D00 
 428              		.section	.text.main,"ax",%progbits
 429              		.align	1
 430              		.global	main
 431              		.syntax unified
 432              		.thumb
 433              		.thumb_func
 434              		.fpu fpv4-sp-d16
 436              	main:
 437              	.LFB130:
  67:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 438              		.loc 1 67 1 is_stmt 1 view -0
 439              		.cfi_startproc
 440              		@ args = 0, pretend = 0, frame = 0
 441              		@ frame_needed = 0, uses_anonymous_args = 0
 442 0000 30B5     		push	{r4, r5, lr}
 443              	.LCFI9:
 444              		.cfi_def_cfa_offset 12
 445              		.cfi_offset 4, -12
 446              		.cfi_offset 5, -8
 447              		.cfi_offset 14, -4
 448 0002 83B0     		sub	sp, sp, #12
 449              	.LCFI10:
 450              		.cfi_def_cfa_offset 24
ARM GAS  C:\Users\zhuWenQ\AppData\Local\Temp\ccZf6yQW.s 			page 15


  75:Core/Src/main.c **** 
 451              		.loc 1 75 3 view .LVU128
 452 0004 FFF7FEFF 		bl	HAL_Init
 453              	.LVL8:
  82:Core/Src/main.c **** 
 454              		.loc 1 82 3 view .LVU129
 455 0008 FFF7FEFF 		bl	SystemClock_Config
 456              	.LVL9:
  89:Core/Src/main.c ****   MX_ADC1_Init();
 457              		.loc 1 89 3 view .LVU130
 458 000c FFF7FEFF 		bl	MX_GPIO_Init
 459              	.LVL10:
  90:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 460              		.loc 1 90 3 view .LVU131
 461 0010 FFF7FEFF 		bl	MX_ADC1_Init
 462              	.LVL11:
 463 0014 17E0     		b	.L15
 464              	.LVL12:
 465              	.L16:
 466              	.LBB7:
  90:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 467              		.loc 1 90 3 is_stmt 0 view .LVU132
 468 0016 0022     		movs	r2, #0
 469 0018 0125     		movs	r5, #1
 470 001a 01E0     		b	.L14
 471              	.L17:
 472 001c 0022     		movs	r2, #0
 473 001e 0125     		movs	r5, #1
 474              	.LVL13:
 475              	.L14:
 126:Core/Src/main.c ****     HAL_GPIO_WritePin(LED_G_GPIO_Port,LED_G_Pin,LEDGState);
 476              		.loc 1 126 5 is_stmt 1 view .LVU133
 477 0020 2C4C     		ldr	r4, .L19
 478 0022 4FF48071 		mov	r1, #256
 479 0026 2046     		mov	r0, r4
 480 0028 FFF7FEFF 		bl	HAL_GPIO_WritePin
 481              	.LVL14:
 127:Core/Src/main.c ****     HAL_GPIO_WritePin(LED_R_GPIO_Port,LED_R_Pin,LEDRState);
 482              		.loc 1 127 5 view .LVU134
 483 002c 0122     		movs	r2, #1
 484 002e 8021     		movs	r1, #128
 485 0030 2046     		mov	r0, r4
 486 0032 FFF7FEFF 		bl	HAL_GPIO_WritePin
 487              	.LVL15:
 128:Core/Src/main.c ****     HAL_Delay(200);
 488              		.loc 1 128 5 view .LVU135
 489 0036 2A46     		mov	r2, r5
 490 0038 4021     		movs	r1, #64
 491 003a 2046     		mov	r0, r4
 492 003c FFF7FEFF 		bl	HAL_GPIO_WritePin
 493              	.LVL16:
 129:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 494              		.loc 1 129 5 view .LVU136
 495 0040 C820     		movs	r0, #200
 496 0042 FFF7FEFF 		bl	HAL_Delay
 497              	.LVL17:
 498              	.LBE7:
ARM GAS  C:\Users\zhuWenQ\AppData\Local\Temp\ccZf6yQW.s 			page 16


  97:Core/Src/main.c ****   {
 499              		.loc 1 97 9 view .LVU137
 500              	.L15:
  97:Core/Src/main.c ****   {
 501              		.loc 1 97 3 view .LVU138
 502              	.LBB8:
  99:Core/Src/main.c ****     GPIO_PinState LEDGState = GPIO_PIN_SET;
 503              		.loc 1 99 5 view .LVU139
 100:Core/Src/main.c ****     GPIO_PinState LEDBState = GPIO_PIN_RESET;
 504              		.loc 1 100 5 view .LVU140
 101:Core/Src/main.c ****     /* USER CODE END WHILE */
 505              		.loc 1 101 5 view .LVU141
 103:Core/Src/main.c ****     {
 506              		.loc 1 103 5 view .LVU142
 103:Core/Src/main.c ****     {
 507              		.loc 1 103 8 is_stmt 0 view .LVU143
 508 0046 0821     		movs	r1, #8
 509 0048 2348     		ldr	r0, .L19+4
 510 004a FFF7FEFF 		bl	HAL_GPIO_ReadPin
 511              	.LVL18:
 109:Core/Src/main.c ****     HAL_GPIO_WritePin(LED_G_GPIO_Port,LED_G_Pin,LEDGState);
 512              		.loc 1 109 5 is_stmt 1 view .LVU144
 513 004e 214C     		ldr	r4, .L19
 514 0050 0022     		movs	r2, #0
 515 0052 4FF48071 		mov	r1, #256
 516 0056 2046     		mov	r0, r4
 517 0058 FFF7FEFF 		bl	HAL_GPIO_WritePin
 518              	.LVL19:
 110:Core/Src/main.c ****     HAL_GPIO_WritePin(LED_R_GPIO_Port,LED_R_Pin,LEDRState);
 519              		.loc 1 110 5 view .LVU145
 520 005c 0122     		movs	r2, #1
 521 005e 8021     		movs	r1, #128
 522 0060 2046     		mov	r0, r4
 523 0062 FFF7FEFF 		bl	HAL_GPIO_WritePin
 524              	.LVL20:
 111:Core/Src/main.c ****     HAL_ADC_Start(&hadc1);
 525              		.loc 1 111 5 view .LVU146
 526 0066 0122     		movs	r2, #1
 527 0068 4021     		movs	r1, #64
 528 006a 2046     		mov	r0, r4
 529 006c FFF7FEFF 		bl	HAL_GPIO_WritePin
 530              	.LVL21:
 112:Core/Src/main.c ****     HAL_ADC_PollForConversion(&hadc1,50);
 531              		.loc 1 112 5 view .LVU147
 532 0070 1A4C     		ldr	r4, .L19+8
 533 0072 2046     		mov	r0, r4
 534 0074 FFF7FEFF 		bl	HAL_ADC_Start
 535              	.LVL22:
 113:Core/Src/main.c ****     if(HAL_IS_BIT_SET(HAL_ADC_GetState(&hadc1),HAL_ADC_STATE_REG_EOC))
 536              		.loc 1 113 5 view .LVU148
 537 0078 3221     		movs	r1, #50
 538 007a 2046     		mov	r0, r4
 539 007c FFF7FEFF 		bl	HAL_ADC_PollForConversion
 540              	.LVL23:
 114:Core/Src/main.c ****     {
 541              		.loc 1 114 5 view .LVU149
 114:Core/Src/main.c ****     {
ARM GAS  C:\Users\zhuWenQ\AppData\Local\Temp\ccZf6yQW.s 			page 17


 542              		.loc 1 114 8 is_stmt 0 view .LVU150
 543 0080 2046     		mov	r0, r4
 544 0082 FFF7FEFF 		bl	HAL_ADC_GetState
 545              	.LVL24:
 114:Core/Src/main.c ****     {
 546              		.loc 1 114 7 view .LVU151
 547 0086 10F4007F 		tst	r0, #512
 548 008a C4D0     		beq	.L16
 116:Core/Src/main.c ****       LOGI("%d ppm",MQ_Analog_Value);
 549              		.loc 1 116 7 is_stmt 1 view .LVU152
 116:Core/Src/main.c ****       LOGI("%d ppm",MQ_Analog_Value);
 550              		.loc 1 116 25 is_stmt 0 view .LVU153
 551 008c 2046     		mov	r0, r4
 552 008e FFF7FEFF 		bl	HAL_ADC_GetValue
 553              	.LVL25:
 116:Core/Src/main.c ****       LOGI("%d ppm",MQ_Analog_Value);
 554              		.loc 1 116 23 view .LVU154
 555 0092 80B2     		uxth	r0, r0
 556 0094 124C     		ldr	r4, .L19+12
 557 0096 2080     		strh	r0, [r4]	@ movhi
 117:Core/Src/main.c ****       if(MQ_Analog_Value*3300/4096>300)
 558              		.loc 1 117 7 is_stmt 1 view .LVU155
 559 0098 124B     		ldr	r3, .L19+16
 560 009a 0193     		str	r3, [sp, #4]
 561 009c 0090     		str	r0, [sp]
 562 009e 124B     		ldr	r3, .L19+20
 563 00a0 124A     		ldr	r2, .L19+24
 564 00a2 1349     		ldr	r1, .L19+28
 565 00a4 0020     		movs	r0, #0
 566 00a6 FFF7FEFF 		bl	SEGGER_RTT_printf
 567              	.LVL26:
 118:Core/Src/main.c ****       {
 568              		.loc 1 118 7 view .LVU156
 118:Core/Src/main.c ****       {
 569              		.loc 1 118 25 is_stmt 0 view .LVU157
 570 00aa 2288     		ldrh	r2, [r4]
 571 00ac 40F6E443 		movw	r3, #3300
 572 00b0 03FB02F3 		mul	r3, r3, r2
 118:Core/Src/main.c ****       {
 573              		.loc 1 118 9 view .LVU158
 574 00b4 0F49     		ldr	r1, .L19+32
 575 00b6 8B42     		cmp	r3, r1
 576 00b8 B0DD     		ble	.L17
 120:Core/Src/main.c ****         LEDRState = GPIO_PIN_RESET;
 577              		.loc 1 120 9 is_stmt 1 view .LVU159
 578 00ba 0A4B     		ldr	r3, .L19+16
 579 00bc 0193     		str	r3, [sp, #4]
 580 00be 0092     		str	r2, [sp]
 581 00c0 0D4B     		ldr	r3, .L19+36
 582 00c2 0E4A     		ldr	r2, .L19+40
 583 00c4 0A49     		ldr	r1, .L19+28
 584 00c6 0020     		movs	r0, #0
 585 00c8 FFF7FEFF 		bl	SEGGER_RTT_printf
 586              	.LVL27:
 121:Core/Src/main.c ****         LEDGState = GPIO_PIN_SET;
 587              		.loc 1 121 9 view .LVU160
 122:Core/Src/main.c ****         LEDBState = GPIO_PIN_SET;
ARM GAS  C:\Users\zhuWenQ\AppData\Local\Temp\ccZf6yQW.s 			page 18


 588              		.loc 1 122 9 view .LVU161
 123:Core/Src/main.c ****       }
 589              		.loc 1 123 9 view .LVU162
 123:Core/Src/main.c ****       }
 590              		.loc 1 123 19 is_stmt 0 view .LVU163
 591 00cc 0122     		movs	r2, #1
 121:Core/Src/main.c ****         LEDGState = GPIO_PIN_SET;
 592              		.loc 1 121 19 view .LVU164
 593 00ce 0025     		movs	r5, #0
 594 00d0 A6E7     		b	.L14
 595              	.L20:
 596 00d2 00BF     		.align	2
 597              	.L19:
 598 00d4 00140240 		.word	1073878016
 599 00d8 00000240 		.word	1073872896
 600 00dc 00000000 		.word	hadc1
 601 00e0 00000000 		.word	.LANCHOR0
 602 00e4 20000000 		.word	.LC3
 603 00e8 00000000 		.word	.LC0
 604 00ec 04000000 		.word	.LC1
 605 00f0 0C000000 		.word	.LC2
 606 00f4 FFCF1200 		.word	1232895
 607 00f8 28000000 		.word	.LC4
 608 00fc 2C000000 		.word	.LC5
 609              	.LBE8:
 610              		.cfi_endproc
 611              	.LFE130:
 613              		.section	.text.Error_Handler,"ax",%progbits
 614              		.align	1
 615              		.global	Error_Handler
 616              		.syntax unified
 617              		.thumb
 618              		.thumb_func
 619              		.fpu fpv4-sp-d16
 621              	Error_Handler:
 622              	.LFB134:
 260:Core/Src/main.c **** 
 261:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 262:Core/Src/main.c **** 
 263:Core/Src/main.c **** /* USER CODE END 4 */
 264:Core/Src/main.c **** 
 265:Core/Src/main.c **** /**
 266:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 267:Core/Src/main.c ****   * @retval None
 268:Core/Src/main.c ****   */
 269:Core/Src/main.c **** void Error_Handler(void)
 270:Core/Src/main.c **** {
 623              		.loc 1 270 1 is_stmt 1 view -0
 624              		.cfi_startproc
 625              		@ args = 0, pretend = 0, frame = 0
 626              		@ frame_needed = 0, uses_anonymous_args = 0
 627              		@ link register save eliminated.
 271:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 272:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 273:Core/Src/main.c **** 
 274:Core/Src/main.c ****   /* USER CODE END Error_Handler_Debug */
 275:Core/Src/main.c **** }
ARM GAS  C:\Users\zhuWenQ\AppData\Local\Temp\ccZf6yQW.s 			page 19


 628              		.loc 1 275 1 view .LVU166
 629 0000 7047     		bx	lr
 630              		.cfi_endproc
 631              	.LFE134:
 633              		.global	MQ_Analog_Value
 634              		.comm	hadc1,72,4
 635              		.section	.bss.MQ_Analog_Value,"aw",%nobits
 636              		.align	1
 637              		.set	.LANCHOR0,. + 0
 640              	MQ_Analog_Value:
 641 0000 0000     		.space	2
 642              		.text
 643              	.Letext0:
 644              		.file 2 "e:\\9 2020-q2-update\\arm-none-eabi\\include\\machine\\_default_types.h"
 645              		.file 3 "e:\\9 2020-q2-update\\arm-none-eabi\\include\\sys\\_stdint.h"
 646              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 647              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 648              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 649              		.file 7 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 650              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 651              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 652              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 653              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 654              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 655              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc.h"
 656              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 657              		.file 15 "e:\\9 2020-q2-update\\lib\\gcc\\arm-none-eabi\\9.3.1\\include\\stddef.h"
 658              		.file 16 "e:\\9 2020-q2-update\\arm-none-eabi\\include\\sys\\_types.h"
 659              		.file 17 "e:\\9 2020-q2-update\\arm-none-eabi\\include\\sys\\reent.h"
 660              		.file 18 "e:\\9 2020-q2-update\\arm-none-eabi\\include\\sys\\lock.h"
 661              		.file 19 "e:\\9 2020-q2-update\\arm-none-eabi\\include\\stdlib.h"
 662              		.file 20 "RTT/SEGGER_RTT.h"
 663              		.file 21 "<built-in>"
ARM GAS  C:\Users\zhuWenQ\AppData\Local\Temp\ccZf6yQW.s 			page 20


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\zhuWenQ\AppData\Local\Temp\ccZf6yQW.s:18     .text.MX_GPIO_Init:00000000 $t
C:\Users\zhuWenQ\AppData\Local\Temp\ccZf6yQW.s:25     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\zhuWenQ\AppData\Local\Temp\ccZf6yQW.s:148    .text.MX_GPIO_Init:00000088 $d
C:\Users\zhuWenQ\AppData\Local\Temp\ccZf6yQW.s:155    .text.MX_ADC1_Init:00000000 $t
C:\Users\zhuWenQ\AppData\Local\Temp\ccZf6yQW.s:161    .text.MX_ADC1_Init:00000000 MX_ADC1_Init
C:\Users\zhuWenQ\AppData\Local\Temp\ccZf6yQW.s:255    .text.MX_ADC1_Init:00000050 $d
                            *COM*:00000048 hadc1
C:\Users\zhuWenQ\AppData\Local\Temp\ccZf6yQW.s:262    .text.SystemClock_Config:00000000 $t
C:\Users\zhuWenQ\AppData\Local\Temp\ccZf6yQW.s:269    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\zhuWenQ\AppData\Local\Temp\ccZf6yQW.s:404    .text.SystemClock_Config:0000008c $d
C:\Users\zhuWenQ\AppData\Local\Temp\ccZf6yQW.s:410    .rodata.main.str1.4:00000000 $d
C:\Users\zhuWenQ\AppData\Local\Temp\ccZf6yQW.s:429    .text.main:00000000 $t
C:\Users\zhuWenQ\AppData\Local\Temp\ccZf6yQW.s:436    .text.main:00000000 main
C:\Users\zhuWenQ\AppData\Local\Temp\ccZf6yQW.s:598    .text.main:000000d4 $d
C:\Users\zhuWenQ\AppData\Local\Temp\ccZf6yQW.s:614    .text.Error_Handler:00000000 $t
C:\Users\zhuWenQ\AppData\Local\Temp\ccZf6yQW.s:621    .text.Error_Handler:00000000 Error_Handler
C:\Users\zhuWenQ\AppData\Local\Temp\ccZf6yQW.s:640    .bss.MQ_Analog_Value:00000000 MQ_Analog_Value
C:\Users\zhuWenQ\AppData\Local\Temp\ccZf6yQW.s:636    .bss.MQ_Analog_Value:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_ADC_Init
HAL_ADC_ConfigChannel
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_Delay
HAL_GPIO_ReadPin
HAL_ADC_Start
HAL_ADC_PollForConversion
HAL_ADC_GetState
HAL_ADC_GetValue
SEGGER_RTT_printf
